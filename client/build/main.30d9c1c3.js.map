{"version":3,"sources":["../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/date-fns-tz/esm/_lib/tzIntlTimeZoneName/index.js","../node_modules/date-fns-tz/esm/_lib/tzTokenizeDate/index.js","../node_modules/date-fns-tz/esm/_lib/tzParseTimezone/index.js","../node_modules/date-fns-tz/esm/format/formatters/index.js","../node_modules/date-fns-tz/esm/toDate/index.js","../node_modules/date-fns-tz/esm/format/index.js","../node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","../node_modules/date-fns-tz/esm/utcToZonedTime/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns-tz/esm/zonedTimeToUtc/index.js","../node_modules/date-fns-tz/esm/index.js","main.js"],"names":["requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","isValid","dirtyDate","date","isNaN","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","options","result","replace","addSuffix","comparison","buildFormatLongFn","dirtyOptions","width","String","defaultWidth","format","formats","formatLong","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","localize","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","dirtyNumber","_dirtyOptions","number","Number","rem100","era","quarter","month","day","dayPeriod","buildMatchPatternFn","dirtyString","string","matchResult","match","matchPattern","matchedString","parseResult","parsePattern","value","valueCallback","rest","slice","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","findIndex","pattern","test","findKey","object","predicate","key","hasOwnProperty","array","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","index","locale","code","weekStartsOn","firstWeekContainsDate","toInteger","Math","ceil","floor","addMilliseconds","dirtyAmount","timestamp","amount","subMilliseconds","addLeadingZeros","targetLength","output","sign","abs","formatters","y","signedYear","getUTCFullYear","year","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","MILLISECONDS_IN_DAY","getUTCDayOfYear","setUTCMonth","setUTCHours","startOfYearTimestamp","difference","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","getUTCISOWeek","round","startOfUTCWeek","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","dayPeriodEnum","G","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","R","isoWeekYear","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","hours","toLowerCase","b","B","K","k","X","_localize","originalDate","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","longFormatters","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","dateTimeFormat","datePattern","timePattern","p","P","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","tzIntlTimeZoneName","dtf","getDTF","timeZone","formatToParts","partsTimeZone","hackyTimeZone","formatted","tzNameMatch","exec","substr","Intl","DateTimeFormat","undefined","timeZoneName","tzTokenizeDate","getDateTimeFormat","partsOffset","hackyOffset","typeToPos","hour","minute","second","filled","pos","type","parsed","dtfCache","testDateFormatted","hour12","hourCycleSupported","hourCycle","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","patterns","timezone","timezoneZ","timezoneHH","timezoneHHMM","timezoneIANA","tzParseTimezone","timezoneString","isUtcDate","absoluteOffset","validateTimezone","now","calcOffset","toUtcDate","fixOffset","tokens","asUTC","asTS","over","localTS","utcGuess","o2","o3","max","dirtyDelimeter","delimeter","DEFAULT_ADDITIONAL_DIGITS","dateTimeDelimeter","plainTime","timeZoneDelimeter","YY","YYY","YYYY","YYYYY","MM","DDD","MMDD","Www","WwwD","HH","HHMM","HHMMSS","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","dateString","timeString","split","patternYYY","patternYYYYY","yearString","centuryString","validateDate","validateDayOfYearDate","validateWeekDate","dayOfISOWeekYear","validateTime","parseFloat","seconds","fourthOfJanuaryDay","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","isLeapYear","tzFormattingTokensRegExp","matches","reduce","utcToZonedTime","offsetMilliseconds","zonedTime","assign","target","dirtyObject","property","cloneObject","zonedTimeToUtc","extendedOptions","handleContentLoaded","weathersArray","initialX","initialY","counter","num","indexWeather","box3HourCelsius","box3HourTime","box3HourTemp","box3HourIcon","box3HourDescription","box4CurrentIcons","box4CurrentTemp","box4CurrentDescription","box4DaysLable","box4DayTimes","box4NightTimes","box4TempDay","box4TempNight","box4IconsDay","box4IconsNight","box4HourTimes","box4HourTemps","box4HourIcons","box4HourDescription","box4HourCelsious","buttons","flag","svgWrapper","document","querySelector","svgLoader","bgImageContainer","buttonRemove","buttonSearch","form","infoMessage","searchInputCity","searchInputCountry","msgAlert","appWrapper","logoStart","sliderContent","dotsWrapper","getElementsApp","innerBox1All","querySelectorAll","innerBox2All","innerBox3All","innerBox4All","innerBox1CityAll","innerBox1DateAll","sliderBoxes3Mobile","city","sliderBoxes4","sliderBoxesDays4","sliderBox4DetailsIcon","sliderBox4TempCurrent","sliderBox4Description","sliderBox4Days1","sliderBox4DayTime","sliderBox3HourCelsius","sliderBox3HourTime","sliderBox3HourTemp","sliderBox3HourIcon","sliderBox3HourDesc","sliderButtons","sliderBox4HourTimes","sliderBox4HourTemps","sliderBox4HourIcons","sliderBox4HourDescriptions","sliderBox4HourCelsius","sliderBox4IconDay","sliderBox4IconNight","sliderButtonsPanel","sliderBox4NightTime","sliderBox4TempDay","sliderBox4TempNight","sliderBox2Title","sliderBox3Title","sliderBox4Title","sliderCelsius1","sliderDesc1","sliderDots","sliderIcon1","sliderTemp1","detailsTitle","detailsWeather","innerBoxFour","buttonsButtom","timesCountry","cutArray1","curArray2","cutArray3","cutArray4","cutArray5","cutArray6","cutArray7","cutArray8","cutArray9","cutArray10","cutArray11","cutArray12","cutArray13","cutArray14","cutArray15","cutArray16","cutArray17","cutArray18","cutArray19","cutArray20","cutArray21","push","detailsIcons","currentTemp","currentDescription","dayLabel","dayTime","nightTime","dayTemp","dayNight","iconDay","iconNight","hoursTemps","hoursIcons","hoursDesc","hoursCelsiusIcon","hourTemp","hourIcon","hourDesc","iconsCelsius","style","localStorageWeather","JSON","parse","localStorage","getItem","checkPeriodOfCurrentDay","className","setDefaultLogoPage","filter","webkitFilter","borderBottom","background","borderBottomColor","getCurrentDate","timeInCountry","currentDate","toDateString","dateCurrent","indexComma","nameMonth","dayNumber","part1","part2","partchanged1","partChanged2","todayDate","getChartData","tempHourly","hourly","item","temp","labelHourly","dateTimeUtc","data","period","timeHourly","isDayOrNight","checkCurrentDayOrNight","current","sunrise","sunset","iconId","idIcon","colorChart","description","getCurrentChartColors","getCurrentImage","config","labels","datasets","label","backgroundColor","borderColor","cubicInterpolationMode","borderWidth","yAxisID","XAxisID","maintainAspectRatio","plugins","legend","display","position","align","color","scales","xAxes","ticks","font","weight","yAxes","clock","dateUtc","countryTime","lcStorage","timeCountry","timeLast","timeFirst","innerHTML","children","createDots","dataWeather","forEach","elementDot","createElement","appendChild","addEventListener","handleClickDot","defaultVisiblityDetailsButton","firstButtonCheckWeatherDetails","classList","add","handleClickButtonCheckWeather","indexBtn","preventDefault","stopPropagation","box4Title","box4All","boxesDays4","boxes3Mobile","sliderBox4AllLast","sliderBox4AllFirst","sliderBoxesDays4Last","sliderBoxesDays4First","sliderBoxes3MobileLast","sliderBoxes3MobileFirst","boxFour","panelLast","panelFirst","titleLast","titleFirst","buttonsLast","buttonsfirst","remove","fontWeight","btn","transform","path","createCopySlides","setTimeout","firstSlide","cloneNode","setAttribute","lastSlide","insertBefore","append","nameClass","myChart","Chart","destroy","myChart1","transitionDuration","fetchWeahter","showLoader","cityInputValue","normalize","countryInputValue","country","fetch","method","mode","headers","credentials","body","stringify","then","response","ok","json","weatherFourHours","structureSlide","getStructureSlideWeather","slide","btnSearchClass","btnRemoveClass","searchInputCityClass","searchInputCountryClass","classInnerBox1","classDate","classCity","classTime","classTemp1","classCel1","classDec1","classIco1","classInnerBox2","classInnerBox3","classInnerBox4","classBtnPan","classDot","classTitle1","classTitle2","classTitle3","classDetails1","classTemp","classDescription","classLabel1","classDayTime","classNightTime","classDayTemp","classNightTemp","classDayIcon","classNightIcon","classHour","classHourTemp","classHourIcons","classHourDesc","classHourCelsius","classHourIcon","classBtn","setActiveStylesWhenRefresh","currentClass","nameClassBg","timeClearTwo","setInterval","clearInterval","sliderBox2Boxes","margin","height","elementCanvas","removeAttribute","chartFetch","window","CheckSizeWindow","catch","err","message","idInterval","element","clearInt","readyState","clearTime","clearTimeout","currentDateUtc","currentTimeCountry","dateUtcSunrise","countryTimeSunrise","timeSunriseMilliseconds","dateUtcSunset","countryTimeSunset","timeSunsetMilliseconds","getCurrentIcon","currentWeatherIdIcon","weatherIdIcon","checkTimeHourly","hourlyTime","dateHourly","timeMilliseconds","checkDayNight","toFixed","toLocaleString","feels_like","humidity","wind_speed","pressure","dew_point","visibility","daily","tempDay","tempNight","sizeSliderDefaultAndResizeLess1000","diff2","innerWidth","widthPx","events","swipeUp","Event","swipeDown","swipeLeft","swipeRight","hideLoader","timeClean","classMessage","alertClass","img1","Image","src","onload","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","img13","img14","img15","checkBackgroundLoaded","checkIsAdded","find","detailsLocation","setItem","classButtonRemove","classButtonSearch","classSearchInputCity","classSearchInputCountry","setClassSearchBar","localIndex","boxClass","boxDateclass","boxCityclass","boxClassTime","boxClassTemp1","boxClassCel1","boxClassDec1","boxClassIco1","boxClass2","boxClass3","boxClass4","btnPanelClass","dotClass","classTitleBox2","classTitleBox3","classTitleBox4","boxDetails","classTempDay","classTempNight","classIconDay","classIconNight","setClassActiveStyles","clearOne","localStorageData","indexNum","updateBox4CurrentIcons","updateBox4CurrentTemp","updatedBox4CurrentDesc","updatedBox4DaysLabel","updatedBox4DaysTimes","updatedBox4NightTimes","updatedBox4TempDay","updatedBox4TempNight","updatedBox4IconsDay","updatedBox4IconsNight","updatedBox4HourTimes","updatedBox4HourTemps","updatedBox4HourIcons","updatedBox4HourDesc","updatedBox4HourCelsius","updatedBox3HourTime","updatedBox3HourTemp","updatedBox3HourIcon","updatedBox3HourDesc","updatedBox3HourCelsius","updatedButtons","lcnameClass","firstClassBg","firstClassBtnR","firstClassBtnS","messageClass","oneClassCity","twoClassCity","oneClassCountry","twoClassCountry","childNodes","firstElementChild","attributes","disabled","elementStyle","indexSlide","nodeValue","partElementStyle","lastIndexOf","nameDeletedCity","updatedWeatherSlides","parentNode","removeChild","localStoragSlidesData","sizePrecent","textContent","touchX","touches","clientX","touchY","clientY","currenTouchX","currenTouchY","diffrenceX","diffrenceY","dispatchEvent","setClassSingleSlide","lcClassName","firstClassBgc","slideTransition","transition","Boolean","id","lStorageSlide"],"mappings":"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","file":"main.30d9c1c3.js","sourceRoot":"..\\src","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import lightFormatters from \"../lightFormatters/index.js\";\nimport getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","/**\n * Returns the formatted time zone name of the provided `timeZone` or the current\n * system time zone if omitted, accounting for DST according to the UTC value of\n * the date.\n */\nexport default function tzIntlTimeZoneName(length, date, options) {\n  var dtf = getDTF(length, options.timeZone, options.locale)\n  return dtf.formatToParts ? partsTimeZone(dtf, date) : hackyTimeZone(dtf, date)\n}\n\nfunction partsTimeZone(dtf, date) {\n  var formatted = dtf.formatToParts(date)\n  return formatted[formatted.length - 1].value\n}\n\nfunction hackyTimeZone(dtf, date) {\n  var formatted = dtf.format(date).replace(/\\u200E/g, '')\n  var tzNameMatch = / [\\w-+ ]+$/.exec(formatted)\n  return tzNameMatch ? tzNameMatch[0].substr(1) : ''\n}\n\n// If a locale has been provided `en-US` is used as a fallback in case it is an\n// invalid locale, otherwise the locale is left undefined to use the system locale.\nfunction getDTF(length, timeZone, locale) {\n  if (locale && !locale.code) {\n    throw new Error(\n      \"date-fns-tz error: Please set a language code on the locale object imported from date-fns, e.g. `locale.code = 'en-US'`\"\n    )\n  }\n  return new Intl.DateTimeFormat(locale ? [locale.code, 'en-US'] : undefined, {\n    timeZone: timeZone,\n    timeZoneName: length,\n  })\n}\n","/**\n * Returns the [year, month, day, hour, minute, seconds] tokens of the provided\n * `date` as it will be rendered in the `timeZone`.\n */\nexport default function tzTokenizeDate(date, timeZone) {\n  var dtf = getDateTimeFormat(timeZone)\n  return dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date)\n}\n\nvar typeToPos = {\n  year: 0,\n  month: 1,\n  day: 2,\n  hour: 3,\n  minute: 4,\n  second: 5,\n}\n\nfunction partsOffset(dtf, date) {\n  var formatted = dtf.formatToParts(date)\n  var filled = []\n  for (var i = 0; i < formatted.length; i++) {\n    var pos = typeToPos[formatted[i].type]\n\n    if (pos >= 0) {\n      filled[pos] = parseInt(formatted[i].value, 10)\n    }\n  }\n  return filled\n}\n\nfunction hackyOffset(dtf, date) {\n  var formatted = dtf.format(date).replace(/\\u200E/g, '')\n  var parsed = /(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/.exec(formatted)\n  // var [, fMonth, fDay, fYear, fHour, fMinute, fSecond] = parsed\n  // return [fYear, fMonth, fDay, fHour, fMinute, fSecond]\n  return [parsed[3], parsed[1], parsed[2], parsed[4], parsed[5], parsed[6]]\n}\n\n// Get a cached Intl.DateTimeFormat instance for the IANA `timeZone`. This can be used\n// to get deterministic local date/time output according to the `en-US` locale which\n// can be used to extract local time parts as necessary.\nvar dtfCache = {}\nfunction getDateTimeFormat(timeZone) {\n  if (!dtfCache[timeZone]) {\n    // New browsers use `hourCycle`, IE and Chrome <73 does not support it and uses `hour12`\n    var testDateFormatted = new Intl.DateTimeFormat('en-US', {\n      hour12: false,\n      timeZone: 'America/New_York',\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    }).format(new Date('2014-06-25T04:00:00.123Z'))\n    var hourCycleSupported =\n      testDateFormatted === '06/25/2014, 00:00:00' ||\n      testDateFormatted === '‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00'\n\n    dtfCache[timeZone] = hourCycleSupported\n      ? new Intl.DateTimeFormat('en-US', {\n          hour12: false,\n          timeZone: timeZone,\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n        })\n      : new Intl.DateTimeFormat('en-US', {\n          hourCycle: 'h23',\n          timeZone: timeZone,\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n        })\n  }\n  return dtfCache[timeZone]\n}\n","import tzTokenizeDate from '../tzTokenizeDate/index.js'\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\n\nvar patterns = {\n  timezone: /([Z+-].*)$/,\n  timezoneZ: /^(Z)$/,\n  timezoneHH: /^([+-])(\\d{2})$/,\n  timezoneHHMM: /^([+-])(\\d{2}):?(\\d{2})$/,\n  timezoneIANA: /(UTC|(?:[a-zA-Z]+\\/[a-zA-Z_-]+(?:\\/[a-zA-Z_]+)?))$/,\n}\n\n// Parse various time zone offset formats to an offset in milliseconds\nexport default function tzParseTimezone(timezoneString, date, isUtcDate) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = patterns.timezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  var hours\n\n  // ±hh\n  token = patterns.timezoneHH.exec(timezoneString)\n  if (token) {\n    hours = parseInt(token[2], 10)\n\n    if (!validateTimezone(hours)) {\n      return NaN\n    }\n\n    absoluteOffset = hours * MILLISECONDS_IN_HOUR\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = patterns.timezoneHHMM.exec(timezoneString)\n  if (token) {\n    hours = parseInt(token[2], 10)\n    var minutes = parseInt(token[3], 10)\n\n    if (!validateTimezone(hours, minutes)) {\n      return NaN\n    }\n\n    absoluteOffset = hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset\n  }\n\n  // IANA time zone\n  token = patterns.timezoneIANA.exec(timezoneString)\n  if (token) {\n    date = new Date(date || Date.now())\n    var utcDate = isUtcDate ? date : toUtcDate(date)\n\n    var offset = calcOffset(utcDate, timezoneString)\n\n    var fixedOffset = isUtcDate ? offset : fixOffset(date, offset, timezoneString)\n\n    return -fixedOffset\n  }\n\n  return 0\n}\n\nfunction toUtcDate(date) {\n  return new Date(\n    Date.UTC(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds()\n    )\n  )\n}\n\nfunction calcOffset(date, timezoneString) {\n  var tokens = tzTokenizeDate(date, timezoneString)\n\n  var asUTC = Date.UTC(tokens[0], tokens[1] - 1, tokens[2], tokens[3] % 24, tokens[4], tokens[5])\n\n  var asTS = date.getTime()\n  var over = asTS % 1000\n  asTS -= over >= 0 ? over : 1000 + over\n  return asUTC - asTS\n}\n\nfunction fixOffset(date, offset, timezoneString) {\n  var localTS = date.getTime()\n\n  // Our UTC time is just a guess because our offset is just a guess\n  var utcGuess = localTS - offset\n\n  // Test whether the zone matches the offset for this ts\n  var o2 = calcOffset(new Date(utcGuess), timezoneString)\n\n  // If so, offset didn't change and we're done\n  if (offset === o2) {\n    return offset\n  }\n\n  // If not, change the ts by the difference in the offset\n  utcGuess -= o2 - offset\n\n  // If that gives us the local time we want, we're done\n  var o3 = calcOffset(new Date(utcGuess), timezoneString)\n  if (o2 === o3) {\n    return o2\n  }\n\n  // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\n  return Math.max(o2, o3)\n}\n\nfunction validateTimezone(hours, minutes) {\n  if (minutes != null && (minutes < 0 || minutes > 59)) {\n    return false\n  }\n\n  return true\n}\n","import tzIntlTimeZoneName from '../../_lib/tzIntlTimeZoneName'\nimport tzParseTimezone from '../../_lib/tzParseTimezone'\n\nvar MILLISECONDS_IN_MINUTE = 60 * 1000\n\nvar formatters = {\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = options.timeZone\n      ? tzParseTimezone(options.timeZone, originalDate) / MILLISECONDS_IN_MINUTE\n      : originalDate.getTimezoneOffset()\n\n    if (timezoneOffset === 0) {\n      return 'Z'\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX': // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimeter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = options.timeZone\n      ? tzParseTimezone(options.timeZone, originalDate) / MILLISECONDS_IN_MINUTE\n      : originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx': // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimeter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = options.timeZone\n      ? tzParseTimezone(options.timeZone, originalDate) / MILLISECONDS_IN_MINUTE\n      : originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return tzIntlTimeZoneName('short', originalDate, options)\n      // Long\n      case 'zzzz':\n      default:\n        return tzIntlTimeZoneName('long', originalDate, options)\n    }\n  },\n}\n\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : ''\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return sign + output\n}\n\nfunction formatTimezone(offset, dirtyDelimeter) {\n  var delimeter = dirtyDelimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2)\n  var minutes = addLeadingZeros(absOffset % 60, 2)\n  return sign + hours + delimeter + minutes\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimeter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+'\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2)\n  }\n  return formatTimezone(offset, dirtyDelimeter)\n}\n\nfunction formatTimezoneShort(offset, dirtyDelimeter) {\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  if (minutes === 0) {\n    return sign + String(hours)\n  }\n  var delimeter = dirtyDelimeter || ''\n  return sign + String(hours) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nexport default formatters\n","import toInteger from 'date-fns/esm/_lib/toInteger/index.js'\nimport getTimezoneOffsetInMilliseconds from 'date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js'\nimport tzParseTimezone from '../_lib/tzParseTimezone'\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar patterns = {\n  dateTimeDelimeter: /[T ]/,\n  plainTime: /:/,\n  timeZoneDelimeter: /[Z ]/i,\n\n  // year tokens\n  YY: /^(\\d{2})$/,\n  YYY: [\n    /^([+-]\\d{2})$/, // 0 additional digits\n    /^([+-]\\d{3})$/, // 1 additional digit\n    /^([+-]\\d{4})$/, // 2 additional digits\n  ],\n  YYYY: /^(\\d{4})/,\n  YYYYY: [\n    /^([+-]\\d{4})/, // 0 additional digits\n    /^([+-]\\d{5})/, // 1 additional digit\n    /^([+-]\\d{6})/, // 2 additional digits\n  ],\n\n  // date tokens\n  MM: /^-(\\d{2})$/,\n  DDD: /^-?(\\d{3})$/,\n  MMDD: /^-?(\\d{2})-?(\\d{2})$/,\n  Www: /^-?W(\\d{2})$/,\n  WwwD: /^-?W(\\d{2})-?(\\d{1})$/,\n\n  HH: /^(\\d{2}([.,]\\d*)?)$/,\n  HHMM: /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n  HHMMSS: /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n\n  // timezone tokens (to identify the presence of a tz)\n  timezone: /([Z+-].*| UTC|(?:[a-zA-Z]+\\/[a-zA-Z_]+(?:\\/[a-zA-Z_]+)?))$/,\n}\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n * If the function cannot parse the string or the values are invalid, it returns Invalid Date.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n * All *date-fns* functions will throw `RangeError` if `options.additionalDigits` is not 0, 1, 2 or undefined.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = toDate('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = toDate('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport default function toDate(argument, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  if (argument === null) {\n    return new Date(NaN)\n  }\n\n  var options = dirtyOptions || {}\n\n  var additionalDigits =\n    options.additionalDigits == null\n      ? DEFAULT_ADDITIONAL_DIGITS\n      : toInteger(options.additionalDigits)\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2')\n  }\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === 'object' && Object.prototype.toString.call(argument) === '[object Date]')\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (\n    typeof argument === 'number' ||\n    Object.prototype.toString.call(argument) === '[object Number]'\n  ) {\n    return new Date(argument)\n  } else if (\n    !(\n      typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]'\n    )\n  ) {\n    return new Date(NaN)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (isNaN(date)) {\n    return new Date(NaN)\n  }\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n\n      if (isNaN(time)) {\n        return new Date(NaN)\n      }\n    }\n\n    if (dateStrings.timezone || options.timeZone) {\n      offset = tzParseTimezone(dateStrings.timezone || options.timeZone, new Date(timestamp + time))\n      if (isNaN(offset)) {\n        return new Date(NaN)\n      }\n    } else {\n      // get offset accurate to hour in timezones that change offset\n      offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time))\n      offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time + offset))\n    }\n\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(NaN)\n  }\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {}\n  var array = dateString.split(patterns.dateTimeDelimeter)\n  var timeString\n\n  if (patterns.plainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n    dateStrings.timezone = array[2]\n    if (patterns.timeZoneDelimeter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimeter)[0]\n      timeString = dateString.substr(dateStrings.date.length, dateString.length)\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var patternYYY = patterns.YYY[additionalDigits]\n  var patternYYYYY = patterns.YYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = patterns.YYYY.exec(dateString) || patternYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length),\n    }\n  }\n\n  // YY or ±YYY\n  token = patterns.YY.exec(dateString) || patternYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length),\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null,\n  }\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = patterns.MM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n\n    if (!validateDate(year, month)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = patterns.DDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n\n    if (!validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // yyyy-MM-dd or YYYYMMDD\n  token = patterns.MMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n\n    if (!validateDate(year, month, day)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = patterns.Www.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n\n    if (!validateWeekDate(year, week)) {\n      return new Date(NaN)\n    }\n\n    return dayOfISOWeekYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = patterns.WwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN)\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime(timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = patterns.HH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n\n    if (!validateTime(hours)) {\n      return NaN\n    }\n\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = patterns.HHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n\n    if (!validateTime(hours, minutes)) {\n      return NaN\n    }\n\n    return (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = patterns.HHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n\n    if (!validateTime(hours, minutes, seconds)) {\n      return NaN\n    }\n\n    return (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoWeekYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\n// Validation functions\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)\n}\n\nfunction validateDate(year, month, date) {\n  if (month < 0 || month > 11) {\n    return false\n  }\n\n  if (date != null) {\n    if (date < 1) {\n      return false\n    }\n\n    var isLeapYear = isLeapYearIndex(year)\n    if (isLeapYear && date > DAYS_IN_MONTH_LEAP_YEAR[month]) {\n      return false\n    }\n    if (!isLeapYear && date > DAYS_IN_MONTH[month]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  if (dayOfYear < 1) {\n    return false\n  }\n\n  var isLeapYear = isLeapYearIndex(year)\n  if (isLeapYear && dayOfYear > 366) {\n    return false\n  }\n  if (!isLeapYear && dayOfYear > 365) {\n    return false\n  }\n\n  return true\n}\n\nfunction validateWeekDate(year, week, day) {\n  if (week < 0 || week > 52) {\n    return false\n  }\n\n  if (day != null && (day < 0 || day > 6)) {\n    return false\n  }\n\n  return true\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours != null && (hours < 0 || hours >= 25)) {\n    return false\n  }\n\n  if (minutes != null && (minutes < 0 || minutes >= 60)) {\n    return false\n  }\n\n  if (seconds != null && (seconds < 0 || seconds >= 60)) {\n    return false\n  }\n\n  return true\n}\n","import dateFnsFormat from 'date-fns/esm/format'\nimport formatters from './formatters'\nimport toDate from '../toDate'\n\nvar tzFormattingTokensRegExp = /([xXOz]+)|''|'(''|[^'])+('|$)/g\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | PDT, EST, CEST                    | 6     |\n * |                                 | zzzz    | Pacific Daylight Time             | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are created using the Intl browser API. The output is determined by the\n *    preferred standard of the current locale (en-US by default) which may not always give the expected result.\n *    For this reason it is recommended to supply a `locale` in the format options when formatting a time zone name.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. These tokens are often confused with others. See: https://git.io/fxCyr\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole\n *   library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard\n *   #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table). See [this\n *   post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see:\n *   https://git.io/fxCyr\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/esm/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = String(dirtyFormatStr)\n  var options = dirtyOptions || {}\n\n  var matches = formatStr.match(tzFormattingTokensRegExp)\n  if (matches) {\n    var date = toDate(dirtyDate, options)\n    formatStr = matches.reduce(function (result, token) {\n      return token[0] === \"'\"\n        ? result\n        : result.replace(token, \"'\" + formatters[token[0]](date, token, null, options) + \"'\")\n    }, formatStr)\n  }\n\n  return dateFnsFormat(dirtyDate, formatStr, options)\n}\n","import tzParseTimezone from '../_lib/tzParseTimezone'\n\n/**\n * @name getTimezoneOffset\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @description\n * Returns the time zone offset from UTC time in milliseconds for IANA time zones as well\n * as other time zone offset string formats.\n *\n * For time zones where daylight savings time is applicable a `Date` should be passed on\n * the second parameter to ensure the offset correctly accounts for DST at that time of\n * year. When omitted, the current date is used.\n *\n * @param {String} timeZone - the time zone of this local time, can be an offset or IANA time zone\n * @param {Date|Number} [date] - the date with values representing the local time\n * @returns {Number} the time zone offset in milliseconds\n *\n * @example\n * const result = getTimezoneOffset('-07:00')\n *   //=> -18000000 (-7 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('Africa/Johannesburg')\n *   //=> 7200000 (2 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('America/New_York', new Date(2016, 0, 1))\n *   //=> -18000000 (-5 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('America/New_York', new Date(2016, 6, 1))\n *   //=> -14400000 (-4 * 60 * 60 * 1000)\n */\nexport default function getTimezoneOffset(timeZone, date) {\n  return -tzParseTimezone(timeZone, date)\n}\n","import tzParseTimezone from '../_lib/tzParseTimezone'\nimport toDate from '../toDate'\n\n/**\n * @name utcToZonedTime\n * @category Time Zone Helpers\n * @summary Get a date/time representing local time in a given time zone from the UTC date\n *\n * @description\n * Returns a date instance with values representing the local time in the time zone\n * specified of the UTC time from the date provided. In other words, when the new date\n * is formatted it will show the equivalent hours in the target time zone regardless\n * of the current system time zone.\n *\n * @param {Date|String|Number} date - the date with the relevant UTC time\n * @param {String} timeZone - the time zone to get local time for, can be an offset or IANA time zone\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the new date with the equivalent time in the time zone\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // In June 10am UTC is 6am in New York (-04:00)\n * const result = utcToZonedTime('2014-06-25T10:00:00.000Z', 'America/New_York')\n * //=> Jun 25 2014 06:00:00\n */\nexport default function utcToZonedTime(dirtyDate, timeZone, options) {\n  var date = toDate(dirtyDate, options)\n\n  var offsetMilliseconds = tzParseTimezone(timeZone, date, true) || 0\n\n  var d = new Date(date.getTime() - offsetMilliseconds)\n\n  var zonedTime = new Date(\n    d.getUTCFullYear(),\n    d.getUTCMonth(),\n    d.getUTCDate(),\n    d.getUTCHours(),\n    d.getUTCMinutes(),\n    d.getUTCSeconds(),\n    d.getUTCMilliseconds()\n  )\n\n  return zonedTime\n}\n","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import cloneObject from 'date-fns/esm/_lib/cloneObject'\nimport format from 'date-fns/esm/format'\nimport toDate from '../toDate'\n\n/**\n * @name zonedTimeToUtc\n * @category Time Zone Helpers\n * @summary Get the UTC date/time from a date representing local time in a given time zone\n *\n * @description\n * Returns a date instance with the UTC time of the provided date of which the values\n * represented the local time in the time zone specified. In other words, if the input\n * date represented local time in time time zone, the timestamp of the output date will\n * give the equivalent UTC of that local time regardless of the current system time zone.\n *\n * @param {Date|String|Number} date - the date with values representing the local time\n * @param {String} timeZone - the time zone of this local time, can be an offset or IANA time zone\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the new date with the equivalent time in the time zone\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // In June 10am in Los Angeles is 5pm UTC\n * const result = zonedTimeToUtc(new Date(2014, 5, 25, 10, 0, 0), 'America/Los_Angeles')\n * //=> 2014-06-25T17:00:00.000Z\n */\nexport default function zonedTimeToUtc(date, timeZone, options) {\n  if (date instanceof Date) {\n    date = format(date, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\n  }\n  var extendedOptions = cloneObject(options)\n  extendedOptions.timeZone = timeZone\n  return toDate(date, extendedOptions)\n}\n","// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.\n\nexport { default as format } from './format/index.js'\nexport { default as getTimezoneOffset } from './getTimezoneOffset/index.js'\nexport { default as toDate } from './toDate/index.js'\nexport { default as utcToZonedTime } from './utcToZonedTime/index.js'\nexport { default as zonedTimeToUtc } from './zonedTimeToUtc/index.js'\n","import { utcToZonedTime, format } from \"date-fns-tz\";\r\n\r\nconst handleContentLoaded = () => {\r\n  let weathersArray = [];\r\n  const widthDiv = 100;\r\n  let counter = 1;\r\n  let initialX;\r\n  let initialY;\r\n  let num = 0;\r\n  let indexWeather = 0;\r\n  let box3HourCelsius = [];\r\n  let box3HourTime = [];\r\n  let box3HourTemp = [];\r\n  let box3HourIcon = [];\r\n  let box3HourDescription = [];\r\n  let box4CurrentIcons = [];\r\n  let box4CurrentTemp = [];\r\n  let box4CurrentDescription = [];\r\n  let box4DaysLable = [];\r\n  let box4DayTimes = [];\r\n  let box4NightTimes = [];\r\n  let box4TempDay = [];\r\n  let box4TempNight = [];\r\n  let box4IconsDay = [];\r\n  let box4IconsNight = [];\r\n  let box4HourTimes = [];\r\n  let box4HourTemps = [];\r\n  let box4HourIcons = [];\r\n  let box4HourDescription = [];\r\n  let box4HourCelsious = [];\r\n  let buttons = [];\r\n  let flag = true;\r\n\r\n  const svgWrapper = document.querySelector(\".slider__svg-wrapper\");\r\n  const svgLoader = document.querySelector(\".svg-loader\");\r\n  const bgImageContainer = document.querySelector(\".bgiContainer\");\r\n  const buttonRemove = document.querySelector(\".search-bar__button-remove\");\r\n  const buttonSearch = document.querySelector(\".search-bar__button-search\");\r\n  const form = document.querySelector(\".form\");\r\n  const infoMessage = document.querySelector(\".input-message\");\r\n  const searchInputCity = document.querySelector(\r\n    \".search-bar__input.search-bar__input--city\"\r\n  );\r\n  const searchInputCountry = document.querySelector(\r\n    \".search-bar__input.search-bar__input--country\"\r\n  );\r\n  const msgAlert = document.querySelector(\".input-message\");\r\n  const appWrapper = document.querySelector(\".app-wrapper\");\r\n  const logoStart = document.querySelector(\".slider__wrapper-img\");\r\n  const sliderContent = document.querySelector(\".slider__content\");\r\n  const dotsWrapper = document.querySelector(\".slider__dots-inner-wrapper\");\r\n\r\n  const getElementsApp = (result) => {\r\n    const dotsWrapper = document.querySelector(\".slider__dots-inner-wrapper\");\r\n    const innerBox1All = document.querySelectorAll(\r\n      \".slider__inner-box:nth-child(1)\"\r\n    );\r\n    const innerBox2All = document.querySelectorAll(\r\n      \".slider__inner-box:nth-child(2)\"\r\n    );\r\n    const innerBox3All = document.querySelectorAll(\r\n      \".slider__inner-box:nth-child(3)\"\r\n    );\r\n    const innerBox4All = document.querySelectorAll(\r\n      \".slider__inner-box:nth-child(4)\"\r\n    );\r\n    const innerBox1CityAll = document.querySelectorAll(\".slider__city\");\r\n    const innerBox1DateAll = document.querySelectorAll(\".slider__current-date\");\r\n    const sliderBoxes3Mobile = document.querySelectorAll(\r\n      `.slider__box-3-mobile-${result.city.replace(/\\s/g, \"-\")}`\r\n    );\r\n    const sliderBoxes4 = document.querySelectorAll(\r\n      `.slider__box-4-${result.city.replace(/\\s/g, \"-\")}`\r\n    );\r\n    const sliderBoxesDays4 = document.querySelectorAll(\r\n      `.slider__box-4-days-${result.city.replace(/\\s/g, \"-\")}`\r\n    );\r\n    const sliderBox4DetailsIcon = document.querySelectorAll(\r\n      \".slider__box-details-icon\"\r\n    );\r\n    const sliderBox4TempCurrent = document.querySelectorAll(\r\n      \".slider__box-details-text\"\r\n    );\r\n    const sliderBox4Description = document.querySelectorAll(\r\n      \".slider__box-details-description\"\r\n    );\r\n    const sliderBox4Days1 = document.querySelectorAll(\r\n      \".slider__box-4-days-day\"\r\n    );\r\n    const sliderBox4DayTime = document.querySelectorAll(\r\n      \".slider__box-4-day-time\"\r\n    );\r\n\r\n    const sliderBox3HourCelsius = document.querySelectorAll(\r\n      \".slider__hourly-icon-celsius\"\r\n    );\r\n    const sliderBox3HourTime = document.querySelectorAll(\r\n      \".slider__hourly-weather-time\"\r\n    );\r\n    const sliderBox3HourTemp = document.querySelectorAll(\r\n      \".slider__hourly-weather-temperature-wrapper\"\r\n    );\r\n    const sliderBox3HourIcon = document.querySelectorAll(\r\n      \".slider__hourly-icon-weather\"\r\n    );\r\n    const sliderBox3HourDesc = document.querySelectorAll(\r\n      \".slider__hourly-weather-description\"\r\n    );\r\n\r\n    const sliderButtons = document.querySelectorAll(\r\n      `.slider__bottom-btn.slider__bottom-btn-${result.city.replace(\r\n        /\\s/g,\r\n        \"-\"\r\n      )}`\r\n    );\r\n\r\n    const sliderBox4HourTimes = document.querySelectorAll(\r\n      \".slider__hourly-time-mobile\"\r\n    );\r\n\r\n    const sliderBox4HourTemps = document.querySelectorAll(\r\n      \".slider__hourly-temperature-mobile\"\r\n    );\r\n\r\n    const sliderBox4HourIcons = document.querySelectorAll(\r\n      \".slider__hourly-icon-weather-mobile\"\r\n    );\r\n\r\n    const sliderBox4HourDescriptions = document.querySelectorAll(\r\n      \".slider__hourly-weather-description-mobile\"\r\n    );\r\n\r\n    const sliderBox4HourCelsius = document.querySelectorAll(\r\n      \".slider__hourly-icon-mobile\"\r\n    );\r\n\r\n    const sliderBox4IconDay = document.querySelectorAll(\r\n      \".slider__box-4-days-icon-weather-day\"\r\n    );\r\n    const sliderBox4IconNight = document.querySelectorAll(\r\n      \".slider__box-4-days-icon-weather-night\"\r\n    );\r\n\r\n    const sliderButtonsPanel = document.querySelectorAll(\r\n      \".slider__bottom-panel\"\r\n    );\r\n\r\n    const sliderBox4NightTime = document.querySelectorAll(\r\n      \".slider__box-4-day-night\"\r\n    );\r\n    const sliderBox4TempDay = document.querySelectorAll(\r\n      \".slider__box-4-days-details-text-day\"\r\n    );\r\n    const sliderBox4TempNight = document.querySelectorAll(\r\n      \".slider__box-4-days-details-text-night\"\r\n    );\r\n\r\n    const sliderBox2Title = document.querySelectorAll(\".slider__box-2-title\");\r\n    const sliderBox3Title = document.querySelectorAll(\".slider__box-3-title\");\r\n    const sliderBox4Title = document.querySelectorAll(\".slider__box-4-title\");\r\n    const sliderCelsius1 = document.querySelectorAll(\".slider__celsius-icon\");\r\n    const sliderDesc1 = document.querySelectorAll(\".slider__image-description\");\r\n    const sliderDots = document.querySelectorAll(\".slider__dot\");\r\n    const sliderIcon1 = document.querySelectorAll(\".slider__weather-icon\");\r\n    const sliderTemp1 = document.querySelectorAll(\".slider__temperature\");\r\n    const detailsTitle = document.querySelector(\".slider__box-4-title\");\r\n    const detailsWeather = document.querySelectorAll(\r\n      \".slider__box-4-boxes,.slider__box-4-boxes--days-forecast,.slider__box-4-boxes--hourly-weather\"\r\n    );\r\n    const innerBoxFour = document.querySelector(\r\n      `.slider__inner-box-4-panel-${result.city.replace(/\\s/g, \"-\")}`\r\n    );\r\n    const buttonsButtom = document.querySelectorAll(\r\n      `.slider__bottom-btn-${result.city.replace(/\\s/g, \"-\")}`\r\n    );\r\n\r\n    const timesCountry = document.querySelectorAll(\".slider__country-time\");\r\n\r\n    const cutArray1 = [...sliderBox4DetailsIcon].slice(-6);\r\n    const curArray2 = [...sliderBox4TempCurrent].slice(-6);\r\n    const cutArray3 = [...sliderBox4Description].slice(-6);\r\n    const cutArray4 = [...sliderBox4Days1].slice(-6);\r\n    const cutArray5 = [...sliderBox4DayTime].slice(-6);\r\n    const cutArray6 = [...sliderBox4NightTime].slice(-6);\r\n    const cutArray7 = [...sliderBox4TempDay].slice(-6);\r\n    const cutArray8 = [...sliderBox4TempNight].slice(-6);\r\n    const cutArray9 = [...sliderBox4IconDay].slice(-6);\r\n    const cutArray10 = [...sliderBox4IconNight].slice(-6);\r\n    const cutArray11 = [...sliderBox4HourTimes].slice(-6);\r\n    const cutArray12 = [...sliderBox4HourTemps].slice(-6);\r\n    const cutArray13 = [...sliderBox4HourIcons].slice(-6);\r\n    const cutArray14 = [...sliderBox4HourDescriptions].slice(-6);\r\n    const cutArray15 = [...sliderBox4HourCelsius].slice(-6);\r\n    const cutArray16 = [...sliderBox3HourTime].slice(-4);\r\n    const cutArray17 = [...sliderBox3HourTemp].slice(-4);\r\n    const cutArray18 = [...sliderBox3HourIcon].slice(-4);\r\n    const cutArray19 = [...sliderBox3HourDesc].slice(-4);\r\n    const cutArray20 = [...sliderBox3HourCelsius].slice(-4);\r\n    const cutArray21 = [...sliderButtons].slice(-3);\r\n\r\n    if (flag) {\r\n      box4CurrentIcons.push({ detailsIcons: cutArray1 });\r\n      box4CurrentTemp.push({ currentTemp: curArray2 });\r\n      box4CurrentDescription.push({ currentDescription: cutArray3 });\r\n      box4DaysLable.push({ dayLabel: cutArray4 });\r\n      box4DayTimes.push({ dayTime: cutArray5 });\r\n      box4NightTimes.push({ nightTime: cutArray6 });\r\n      box4TempDay.push({ dayTemp: cutArray7 });\r\n      box4TempNight.push({ dayNight: cutArray8 });\r\n      box4IconsDay.push({ iconDay: cutArray9 });\r\n      box4IconsNight.push({ iconNight: cutArray10 });\r\n      box4HourTimes.push({ hours: cutArray11 });\r\n      box4HourTemps.push({ hoursTemps: cutArray12 });\r\n      box4HourIcons.push({ hoursIcons: cutArray13 });\r\n      box4HourDescription.push({ hoursDesc: cutArray14 });\r\n      box4HourCelsious.push({ hoursCelsiusIcon: cutArray15 });\r\n      box3HourTime.push({ hours: cutArray16 });\r\n      box3HourTemp.push({ hourTemp: cutArray17 });\r\n      box3HourIcon.push({ hourIcon: cutArray18 });\r\n      box3HourDescription.push({ hourDesc: cutArray19 });\r\n      box3HourCelsius.push({ iconsCelsius: cutArray20 });\r\n      buttons.push({ buttons: cutArray21 });\r\n      flag = false;\r\n    }\r\n\r\n    return {\r\n      buttons,\r\n      box3HourCelsius,\r\n      box3HourTime,\r\n      box3HourTemp,\r\n      box3HourIcon,\r\n      box3HourDescription,\r\n      box4HourCelsious,\r\n      box4CurrentDescription,\r\n      box4CurrentIcons,\r\n      box4CurrentTemp,\r\n      box4DaysLable,\r\n      box4DayTimes,\r\n      box4HourTimes,\r\n      box4HourTemps,\r\n      box4HourIcons,\r\n      box4HourDescription,\r\n      box4IconsDay,\r\n      box4IconsNight,\r\n      box4NightTimes,\r\n      box4TempDay,\r\n      box4TempNight,\r\n      innerBox1All,\r\n      innerBox2All,\r\n      innerBox3All,\r\n      innerBox4All,\r\n      innerBox1CityAll,\r\n      innerBox1DateAll,\r\n      dotsWrapper,\r\n      sliderBoxes3Mobile,\r\n      sliderBoxes4,\r\n      sliderBoxesDays4,\r\n      sliderBox2Title,\r\n      sliderBox3Title,\r\n      sliderBox4Title,\r\n      sliderButtonsPanel,\r\n      sliderCelsius1,\r\n      sliderDesc1,\r\n      sliderDots,\r\n      sliderIcon1,\r\n      sliderTemp1,\r\n      timesCountry,\r\n      detailsTitle,\r\n      detailsWeather,\r\n      innerBoxFour,\r\n      buttonsButtom,\r\n    };\r\n  };\r\n\r\n  appWrapper.style.width = 1000 + \"px\";\r\n\r\n  const localStorageWeather = JSON.parse(\r\n    localStorage.getItem(\"weather\") || \"[]\"\r\n  );\r\n\r\n  const checkPeriodOfCurrentDay = () => {\r\n    if (new Date().getHours() <= 21 && new Date().getHours() >= 6) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const setLoaderRefresh = () => {\r\n    const dayTime = checkPeriodOfCurrentDay();\r\n    if (dayTime) {\r\n      svgWrapper.className = \"slider__svg-wrapper day\";\r\n    } else {\r\n      svgWrapper.className = \"slider__svg-wrapper night\";\r\n    }\r\n  };\r\n\r\n  setLoaderRefresh();\r\n\r\n  const setDefaultLogoPage = () => {\r\n    const dayTime = checkPeriodOfCurrentDay();\r\n    if (dayTime) {\r\n      bgImageContainer.className = \"bgiContainer time-day\";\r\n      bgImageContainer.style.filter = \"initial\";\r\n      bgImageContainer.style.webkitFilter = \"initial\";\r\n      searchInputCity.style.borderBottom = \"1px solid #56ccf2\";\r\n      searchInputCountry.style.borderBottom = \"1px solid #56ccf2\";\r\n      buttonSearch.style.background =\r\n        \"linear-gradient(to right, #56ccf2, #56ccf2)\";\r\n      buttonRemove.style.background =\r\n        \"linear-gradient(to right, #56ccf2, #56ccf2)\";\r\n    } else {\r\n      bgImageContainer.className = \"bgiContainer time-night\";\r\n      bgImageContainer.style.filter = \"initial\";\r\n      bgImageContainer.style.webkitFilter = \"initial\";\r\n      searchInputCity.style.borderBottomColor = \"#2C5364\";\r\n      searchInputCountry.style.borderBottomColor = \"#2C5364\";\r\n      buttonSearch.style.background = \"#2C5364\";\r\n      buttonRemove.style.background = \"#2C5364\";\r\n    }\r\n\r\n    buttonRemove.className = \"search-bar__button-remove\";\r\n    buttonSearch.className = \"search-bar__button-search\";\r\n    infoMessage.className = \"input-message\";\r\n    searchInputCity.className = \"search-bar__input search-bar__input--city\";\r\n    searchInputCountry.className =\r\n      \"search-bar__input search-bar__input--country\";\r\n  };\r\n\r\n  setDefaultLogoPage();\r\n\r\n  const getCurrentDate = (timezone) => {\r\n    const utcDate = utcToZonedTime(new Date(), timezone);\r\n    const timeInCountry = format(utcDate, \"yyyy-MM-dd HH:mm:ssXXX\");\r\n    let currentDate = new Date(timeInCountry).toDateString();\r\n\r\n    const day = new Date(timeInCountry).getDate();\r\n    let dateCurrent = currentDate.substr(0, 3) + \",\" + currentDate.substr(3);\r\n    let indexComma = dateCurrent.indexOf(\",\");\r\n    const nameMonth = dateCurrent.slice(indexComma + 2, 8);\r\n    const dayNumber = dateCurrent.slice(indexComma + 6, 11);\r\n    let part1 = dateCurrent.slice(0, 8);\r\n    let part2 = dateCurrent.slice(-8);\r\n    let partchanged1 = part1.replace(nameMonth, dayNumber);\r\n    let partChanged2 = part2.replace(dayNumber, nameMonth);\r\n    let todayDate = partchanged1.replace(dayNumber, day) + partChanged2;\r\n\r\n    return todayDate;\r\n  };\r\n\r\n  const getCurrentChartColors = (description) => {\r\n    switch (description) {\r\n      case \"clear-sky-day\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"clear-sky-night\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"clouds-day\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"clouds-night\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"rain-day\":\r\n        return \"#575757\";\r\n        break;\r\n      case \"rain-night\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"snow-day\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"snow-night\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"fog-day\":\r\n        return \"#272727\";\r\n        break;\r\n      case \"fog-night\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"thunderstorm-day\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"thunderstorm-night\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"tornado\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      case \"squall-day-night\":\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n      default:\r\n        \"clouds-day\";\r\n        return \"rgba(255,255,255,0.82)\";\r\n        break;\r\n    }\r\n  };\r\n\r\n  const getChartData = (result, timezone) => {\r\n    const tempHourly = result.hourly.map((item) => item.temp);\r\n    const labelHourly = result.hourly.map((item) => {\r\n      const dateTimeUtc = utcToZonedTime(new Date(item.data * 1000), timezone);\r\n      const timeInCountry = format(dateTimeUtc, \"yyyy-MM-dd HH:mm:ssXXX\");\r\n      let hours = new Date(timeInCountry).getHours();\r\n      const period = hours >= 12 ? \" p.m.\" : \" a.m.\";\r\n      hours = hours % 12;\r\n      hours = hours ? hours : 12;\r\n      let timeHourly = hours + period;\r\n      return timeHourly;\r\n    });\r\n\r\n    const { isDayOrNight } = checkCurrentDayOrNight(\r\n      timezone,\r\n      result.current.sunrise,\r\n      result.current.sunset\r\n    );\r\n\r\n    const iconId = result.current.idIcon;\r\n    const iconName = getCurrentImage(iconId, isDayOrNight, \",\");\r\n    const nameIcon = iconName.split(\" \")[1];\r\n    const colorChart = getCurrentChartColors(nameIcon);\r\n\r\n    const data = {\r\n      labels: labelHourly,\r\n      datasets: [\r\n        {\r\n          label: \"Temperature\",\r\n          backgroundColor: \"rgb(255,255,255)\",\r\n          borderColor: `${colorChart}`,\r\n          data: tempHourly,\r\n          cubicInterpolationMode: \"monotone\",\r\n          borderWidth: 0.7,\r\n          yAxisID: \"yAxes\",\r\n          XAxisID: \"xAxes\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    const config = {\r\n      type: \"line\",\r\n      data,\r\n      options: {\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            display: false,\r\n            position: \"top\",\r\n            align: \"end\",\r\n            labels: {\r\n              color: \"rgba(255,255,255,0.82)\",\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          xAxes: {\r\n            ticks: {\r\n              color: `${colorChart}`,\r\n              font: {\r\n                weight: \"lighter\",\r\n              },\r\n            },\r\n          },\r\n          yAxes: {\r\n            ticks: {\r\n              color: `${colorChart}`,\r\n              font: {\r\n                weight: \"lighter\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    return config;\r\n  };\r\n\r\n  let clock = (result, timezone) => {\r\n    const dateUtc = utcToZonedTime(new Date(), timezone);\r\n    const countryTime = format(dateUtc, \"yyyy-MM-dd HH:mm:ssXXX\");\r\n    let date = new Date(countryTime);\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let second = date.getSeconds();\r\n    let period = \"AM\";\r\n    if (hour == 0) {\r\n      hour = 0;\r\n    } else if (hour == 12) {\r\n      hour = 12;\r\n      period = \"PM\";\r\n    } else if (hour > 12) {\r\n      period = \"PM\";\r\n    }\r\n\r\n    minute = minute < 10 ? `0${minute}` : minute;\r\n    second = second < 10 ? `0${second}` : second;\r\n    let time = `${hour}:${minute}:${second}:${period}`;\r\n\r\n    const lcStorage = JSON.parse(localStorage.getItem(\"weather\") || \"[]\");\r\n\r\n    const timeCountry = [...document.querySelectorAll(\".slider__country-time\")];\r\n    let timeLast = timeCountry[0];\r\n    let timeFirst = timeCountry[timeCountry.length - 1];\r\n\r\n    if (\r\n      document.querySelector(\r\n        `.slider__country-time-${result.city.replace(/\\s/g, \"-\")}`\r\n      )\r\n    ) {\r\n      document.querySelector(\r\n        `.slider__country-time-${result.city.replace(/\\s/g, \"-\")}`\r\n      ).innerHTML = time;\r\n    }\r\n\r\n    if (\r\n      counter - 1 === 0 &&\r\n      lcStorage.length > 0 &&\r\n      lcStorage[0].city === result.city\r\n    ) {\r\n      timeFirst.innerHTML = \"\";\r\n      timeFirst.innerHTML = time;\r\n    }\r\n\r\n    if (\r\n      counter + 2 === sliderContent.children.length &&\r\n      lcStorage.length > 0 &&\r\n      lcStorage[lcStorage.length - 1].city === result.city\r\n    ) {\r\n      timeLast.innerHTML = \"\";\r\n      timeLast.innerHTML = time;\r\n    }\r\n\r\n    return time;\r\n  };\r\n\r\n  const createDots = (dataWeather) => {\r\n    dataWeather.forEach((item) => {\r\n      const elementDot = document.createElement(\"span\");\r\n      elementDot.className = \"slider__dot\";\r\n      dotsWrapper.appendChild(elementDot);\r\n    });\r\n    const dots = document.querySelectorAll(\".slider__dot\");\r\n\r\n    dots.forEach((item, index) => {\r\n      item.addEventListener(\"click\", () => handleClickDot(index));\r\n    });\r\n  };\r\n\r\n  const defaultVisiblityDetailsButton = (buttonsButtom, sliderBoxes4) => {\r\n    const firstButtonCheckWeatherDetails = buttonsButtom[0];\r\n    firstButtonCheckWeatherDetails?.classList.add(\"active-btn-bottom\");\r\n\r\n    sliderBoxes4.forEach((item, index) => {\r\n      item.classList.add(\"details-visible\");\r\n    });\r\n  };\r\n\r\n  const handleClickButtonCheckWeather = (\r\n    e,\r\n    indexBtn,\r\n    detailsWeather,\r\n    buttonsButtom,\r\n    innerBoxFour,\r\n    sliderBoxes3Mobile,\r\n    sliderBoxesDays4,\r\n    sliderBoxes4\r\n  ) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const box4Title = [...document.querySelectorAll(\".slider__box-4-title\")];\r\n    const box4All = [...document.querySelectorAll(`.slider__box-4`)];\r\n    const boxesDays4 = [...document.querySelectorAll(`.slider__box-4-days`)];\r\n    const boxes3Mobile = [\r\n      ...document.querySelectorAll(`.slider__box-3-mobile`),\r\n    ];\r\n    const buttons = [...document.querySelectorAll(`.slider__bottom-btn`)];\r\n\r\n    let sliderBox4AllLast = box4All.slice(0, 6);\r\n    let sliderBox4AllFirst = box4All.slice(-6);\r\n    let sliderBoxesDays4Last = boxesDays4.slice(0, 6);\r\n    let sliderBoxesDays4First = boxesDays4.slice(-6);\r\n    let sliderBoxes3MobileLast = boxes3Mobile.slice(0, 6);\r\n    let sliderBoxes3MobileFirst = boxes3Mobile.slice(-6);\r\n    const boxFour = document.querySelectorAll(`.slider__inner-box-4`);\r\n    let panelLast = boxFour[0];\r\n    let panelFirst = boxFour[boxFour.length - 1];\r\n    let titleLast = box4Title[0];\r\n    let titleFirst = box4Title[box4Title.length - 1];\r\n    let buttonsLast = buttons.slice(0, 3);\r\n    let buttonsfirst = buttons.slice(-3);\r\n\r\n    if (detailsWeather.length > 0) {\r\n      buttonsButtom.forEach((item) => {\r\n        item.classList.remove(\"active-btn-bottom\");\r\n        item.style.backgroundColor = \"rgba(255, 255, 255, 0.1)\";\r\n        item.style.fontWeight = 300;\r\n      });\r\n\r\n      const btn = e.target;\r\n      btn.classList.add(\"active-btn-bottom\");\r\n      btn.style.backgroundColor = \"rgba(255, 255, 255, 0.2)\";\r\n      btn.style.fontWeight = 400;\r\n\r\n      if (counter - 1 === 0) {\r\n        titleFirst.innerHTML = btn.innerHTML;\r\n        panelFirst.style.transform = `translateX(-${indexBtn}00%)`;\r\n\r\n        buttonsfirst.forEach((item) => {\r\n          item.classList.remove(\"active-btn-bottom\");\r\n          item.style.backgroundColor = \"rgba(255, 255, 255, 0.1)\";\r\n          item.style.fontWeight = 300;\r\n        });\r\n\r\n        buttonsfirst[indexBtn].classList.add(\"active-btn-bottom\");\r\n        buttonsfirst[indexBtn].style.backgroundColor =\r\n          \"rgba(255, 255, 255, 0.2)\";\r\n        buttonsfirst[indexBtn].style.fontWeight = 400;\r\n      }\r\n\r\n      if (counter + 2 === sliderContent.children.length) {\r\n        titleLast.innerHTML = btn.innerHTML;\r\n        panelLast.style.transform = `translateX(-${indexBtn}00%)`;\r\n\r\n        buttonsLast.forEach((item) => {\r\n          item.classList.remove(\"active-btn-bottom\");\r\n          item.style.backgroundColor = \"rgba(255, 255, 255, 0.1)\";\r\n          item.style.fontWeight = 300;\r\n        });\r\n\r\n        buttonsLast[indexBtn].classList.add(\"active-btn-bottom\");\r\n        buttonsLast[indexBtn].style.backgroundColor =\r\n          \"rgba(255, 255, 255, 0.2)\";\r\n        buttonsLast[indexBtn].style.fontWeight = 400;\r\n      }\r\n\r\n      innerBoxFour.style.transform = `translateX(-${indexBtn}00%)`;\r\n\r\n      detailsWeather.forEach((item, index) => {\r\n        if (counter - 1 === 0) {\r\n          sliderBox4AllFirst.forEach((item, index) => {\r\n            item.classList.remove(\"details-visible\");\r\n          });\r\n\r\n          sliderBoxesDays4First.forEach((item, index) => {\r\n            item.classList.remove(\"details-visible\");\r\n          });\r\n\r\n          sliderBoxes3MobileFirst.forEach((item, index) => {\r\n            item.classList.remove(\"details-visible\");\r\n          });\r\n        }\r\n\r\n        if (counter + 2 === sliderContent.children.length) {\r\n          sliderBox4AllLast.forEach((item, index) => {\r\n            item.classList.remove(\"details-visible\");\r\n          });\r\n\r\n          sliderBoxesDays4Last.forEach((item, index) => {\r\n            item.classList.remove(\"details-visible\");\r\n          });\r\n\r\n          sliderBoxes3MobileLast.forEach((item, index) => {\r\n            item.classList.remove(\"details-visible\");\r\n          });\r\n        }\r\n\r\n        sliderBoxes3Mobile.forEach((item, index) => {\r\n          item.classList.remove(\"details-visible\");\r\n        });\r\n\r\n        sliderBoxesDays4.forEach((item, index) => {\r\n          item.classList.remove(\"details-visible\");\r\n        });\r\n\r\n        sliderBoxes4.forEach((item, index) => {\r\n          item.classList.remove(\"details-visible\");\r\n        });\r\n\r\n        switch (indexBtn) {\r\n          case 0:\r\n            sliderBoxes4.forEach((item, index) => {\r\n              item.classList.add(\"details-visible\");\r\n            });\r\n\r\n            if (counter - 1 === 0) {\r\n              sliderBox4AllFirst.forEach((item, index) => {\r\n                item.classList.add(\"details-visible\");\r\n              });\r\n            }\r\n\r\n            if (counter + 2 === sliderContent.children.length) {\r\n              sliderBox4AllLast.forEach((item, index) => {\r\n                item.classList.add(\"details-visible\");\r\n              });\r\n            }\r\n\r\n            break;\r\n          case 1:\r\n            sliderBoxesDays4.forEach((item, index) => {\r\n              item.classList.add(\"details-visible\");\r\n            });\r\n\r\n            if (counter - 1 === 0) {\r\n              sliderBoxesDays4First.forEach((item, index) => {\r\n                item.classList.add(\"details-visible\");\r\n              });\r\n            }\r\n\r\n            if (counter + 2 === sliderContent.children.length) {\r\n              sliderBoxesDays4Last.forEach((item, index) => {\r\n                item.classList.add(\"details-visible\");\r\n              });\r\n            }\r\n\r\n            break;\r\n          case 2:\r\n            sliderBoxes3Mobile.forEach((item, index) => {\r\n              item.classList.add(\"details-visible\");\r\n            });\r\n\r\n            if (counter - 1 === 0) {\r\n              sliderBoxes3MobileFirst.forEach((item, index) => {\r\n                item.classList.add(\"details-visible\");\r\n              });\r\n            }\r\n\r\n            if (counter + 2 === sliderContent.children.length) {\r\n              sliderBoxes3MobileLast.forEach((item, index) => {\r\n                item.classList.add(\"details-visible\");\r\n              });\r\n            }\r\n\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        if (index === indexBtn) {\r\n          e.path[2].children[3].children[0].innerHTML = btn.innerHTML;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const createCopySlides = (result, config) => {\r\n    const localStorageWeather = JSON.parse(\r\n      localStorage.getItem(\"weather\") || \"[]\"\r\n    );\r\n    setTimeout(() => {\r\n      num++;\r\n      if (sliderContent.children[0]) {\r\n        const firstSlide = sliderContent.children[0].cloneNode(true);\r\n\r\n        firstSlide.setAttribute(\"id\", \"first\");\r\n        const lastSlide =\r\n          sliderContent.children[sliderContent.children.length - 1].cloneNode(\r\n            true\r\n          );\r\n\r\n        lastSlide.setAttribute(\"id\", \"last\");\r\n        sliderContent.insertBefore(lastSlide, sliderContent.children[0]);\r\n        sliderContent.append(firstSlide);\r\n        firstSlide.children[1].children[1].children[0].className = `myChart-${result.city.replace(\r\n          /\\s/g,\r\n          \"-\"\r\n        )}-${num}`;\r\n        sliderContent.children[0].children[0].children[1].children[2].children[0].className = `slider__country-time slider__country-time-${result.city.replace(\r\n          /\\s/g,\r\n          \"-\"\r\n        )}-${num} ${\r\n          localStorageWeather[localStorageWeather.length - 1].nameClass\r\n        }`;\r\n\r\n        let myChart = new Chart(\r\n          document.querySelector(\r\n            `.myChart-${result.city.replace(/\\s/g, \"-\")}-${num}`\r\n          ),\r\n          config\r\n        );\r\n\r\n        myChart.destroy();\r\n\r\n        myChart = new Chart(\r\n          document.querySelector(\r\n            `.myChart-${result.city.replace(/\\s/g, \"-\")}-${num}`\r\n          ),\r\n          config\r\n        );\r\n\r\n        let myChart1 = new Chart(\r\n          document.querySelector(`.myChart-${result.city.replace(/\\s/g, \"-\")}`),\r\n          config\r\n        );\r\n\r\n        myChart1.destroy();\r\n\r\n        myChart1 = new Chart(\r\n          document.querySelector(`.myChart-${result.city.replace(/\\s/g, \"-\")}`),\r\n          config\r\n        );\r\n\r\n        sliderContent.style.transitionDuration = \"0s\";\r\n        sliderContent.style.transform = `translateX(-${100}%)`;\r\n      }\r\n    }, 300);\r\n  };\r\n\r\n  const setActiveStylesWhenRefresh = (result, isDayOrNight) => {\r\n    const {\r\n      buttons,\r\n      box3HourCelsius,\r\n      box3HourTime,\r\n      box3HourTemp,\r\n      box3HourIcon,\r\n      box3HourDescription,\r\n      box4HourCelsious,\r\n      box4CurrentDescription,\r\n      box4CurrentIcons,\r\n      box4CurrentTemp,\r\n      box4DaysLable,\r\n      box4DayTimes,\r\n      box4HourTimes,\r\n      box4HourTemps,\r\n      box4HourIcons,\r\n      box4HourDescription,\r\n      box4IconsDay,\r\n      box4IconsNight,\r\n      box4NightTimes,\r\n      box4TempDay,\r\n      box4TempNight,\r\n      innerBox1All,\r\n      innerBox2All,\r\n      innerBox3All,\r\n      innerBox4All,\r\n      innerBox1CityAll,\r\n      innerBox1DateAll,\r\n      sliderBox2Title,\r\n      sliderBox3Title,\r\n      sliderBox4Title,\r\n      sliderCelsius1,\r\n      sliderButtonsPanel,\r\n      sliderDesc1,\r\n      sliderDots,\r\n      sliderIcon1,\r\n      sliderTemp1,\r\n      timesCountry,\r\n    } = getElementsApp(result);\r\n\r\n    const localStorageWeather = JSON.parse(\r\n      localStorage.getItem(\"weather\") || \"[]\"\r\n    );\r\n\r\n    const btnSearchClass = buttonSearch.className.split(\" \")[0];\r\n    const btnRemoveClass = buttonRemove.className.split(\" \")[0];\r\n    const searchInputCityClass = searchInputCity.className;\r\n    const searchInputCountryClass = searchInputCountry.className;\r\n    buttonSearch.className = `${btnSearchClass} ${localStorageWeather[0].nameClass}`;\r\n    buttonRemove.className = `${btnRemoveClass} ${localStorageWeather[0].nameClass}`;\r\n    searchInputCity.className = `${searchInputCityClass} ${localStorageWeather[0].nameClass}`;\r\n    searchInputCountry.className = `${searchInputCountryClass} ${localStorageWeather[0].nameClass}`;\r\n\r\n    let classInnerBox1 = innerBox1All[indexWeather - 1].className.split(\" \")[0];\r\n    innerBox1All[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classInnerBox1\r\n    );\r\n\r\n    let classDate = innerBox1DateAll[indexWeather - 1].className.split(\" \")[0];\r\n    innerBox1DateAll[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classDate\r\n    );\r\n\r\n    let classCity = innerBox1CityAll[indexWeather - 1].className.split(\" \")[0];\r\n    innerBox1CityAll[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classCity\r\n    );\r\n\r\n    let classTime = timesCountry[indexWeather - 1].className;\r\n    timesCountry[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classTime\r\n    );\r\n\r\n    let classTemp1 = sliderTemp1[indexWeather - 1].className;\r\n    sliderTemp1[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classTemp1\r\n    );\r\n\r\n    let classCel1 = sliderCelsius1[indexWeather - 1].className;\r\n    sliderCelsius1[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classCel1\r\n    );\r\n\r\n    let classDec1 = sliderDesc1[indexWeather - 1].className;\r\n    sliderDesc1[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classDec1\r\n    );\r\n\r\n    let classIco1 = sliderIcon1[indexWeather - 1].className;\r\n    sliderIcon1[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classIco1\r\n    );\r\n\r\n    let classInnerBox2 = innerBox2All[indexWeather - 1].className;\r\n    innerBox2All[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classInnerBox2\r\n    );\r\n\r\n    let classInnerBox3 = innerBox3All[indexWeather - 1].className;\r\n    innerBox3All[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classInnerBox3\r\n    );\r\n\r\n    let classInnerBox4 = innerBox4All[indexWeather - 1].className;\r\n    innerBox4All[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classInnerBox4\r\n    );\r\n\r\n    let classBtnPan = sliderButtonsPanel[indexWeather - 1].className;\r\n    sliderButtonsPanel[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classBtnPan\r\n    );\r\n\r\n    sliderDots.forEach((item, index) => {\r\n      let classDot = item.className;\r\n      item.className = `${classDot} ${localStorageWeather[0].nameClass}`;\r\n    });\r\n\r\n    let classTitle1 = sliderBox2Title[indexWeather - 1].className;\r\n    sliderBox2Title[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classTitle1\r\n    );\r\n\r\n    let classTitle2 = sliderBox3Title[indexWeather - 1].className;\r\n    sliderBox3Title[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classTitle2\r\n    );\r\n\r\n    let classTitle3 = sliderBox4Title[indexWeather - 1].className;\r\n    sliderBox4Title[indexWeather - 1].className = getCurrentImage(\r\n      result.current.idIcon,\r\n      isDayOrNight,\r\n      classTitle3\r\n    );\r\n\r\n    box4CurrentIcons[indexWeather - 1].detailsIcons.forEach((item) => {\r\n      let classDetails1 = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classDetails1\r\n      );\r\n    });\r\n\r\n    box4CurrentTemp[indexWeather - 1].currentTemp.forEach((item) => {\r\n      let classTemp = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classTemp\r\n      );\r\n    });\r\n\r\n    box4CurrentDescription[indexWeather - 1].currentDescription.forEach(\r\n      (item) => {\r\n        let classDescription = item.className.split(\" \")[0];\r\n\r\n        item.className = getCurrentImage(\r\n          result.current.idIcon,\r\n          isDayOrNight,\r\n          classDescription\r\n        );\r\n      }\r\n    );\r\n\r\n    box4DaysLable[indexWeather - 1].dayLabel.forEach((item) => {\r\n      let classLabel1 = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classLabel1\r\n      );\r\n    });\r\n\r\n    box4DayTimes[indexWeather - 1].dayTime.forEach((item) => {\r\n      let classDayTime = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classDayTime\r\n      );\r\n    });\r\n\r\n    box4NightTimes[indexWeather - 1].nightTime.forEach((item) => {\r\n      let classNightTime = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classNightTime\r\n      );\r\n    });\r\n\r\n    box4TempDay[indexWeather - 1].dayTemp.forEach((item) => {\r\n      let classDayTemp = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classDayTemp\r\n      );\r\n    });\r\n\r\n    box4TempNight[indexWeather - 1].dayNight.forEach((item) => {\r\n      let classNightTemp = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classNightTemp\r\n      );\r\n    });\r\n\r\n    box4IconsDay[indexWeather - 1].iconDay.forEach((item) => {\r\n      let classDayIcon = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classDayIcon\r\n      );\r\n    });\r\n\r\n    box4IconsNight[indexWeather - 1].iconNight.forEach((item) => {\r\n      let classNightIcon = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classNightIcon\r\n      );\r\n    });\r\n\r\n    box4HourTimes[indexWeather - 1].hours.forEach((item) => {\r\n      let classHour = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classHour\r\n      );\r\n    });\r\n\r\n    box4HourTemps[indexWeather - 1].hoursTemps.forEach((item) => {\r\n      let classHourTemp = item.className.split(\" \")[0];\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classHourTemp\r\n      );\r\n    });\r\n\r\n    box4HourIcons[indexWeather - 1].hoursIcons.forEach((item) => {\r\n      let classHourIcons = item.className.split(\" \")[0];\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classHourIcons\r\n      );\r\n    });\r\n\r\n    box4HourDescription[indexWeather - 1].hoursDesc.forEach((item) => {\r\n      let classHourDesc = item.className.split(\" \")[0];\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classHourDesc\r\n      );\r\n    });\r\n\r\n    box4HourCelsious[indexWeather - 1].hoursCelsiusIcon.forEach((item) => {\r\n      let classHourCelsius = item.className.split(\" \")[0];\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classHourCelsius\r\n      );\r\n    });\r\n\r\n    box3HourTime[indexWeather - 1].hours.forEach((item) => {\r\n      let classHour = item.className.split(\" \")[0];\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classHour\r\n      );\r\n    });\r\n\r\n    box3HourTemp[indexWeather - 1].hourTemp.forEach((item) => {\r\n      let classHourTemp = item.className.split(\" \")[0];\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classHourTemp\r\n      );\r\n    });\r\n\r\n    box3HourIcon[indexWeather - 1].hourIcon.forEach((item) => {\r\n      let classHourIcon = item.className.split(\" \")[0];\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classHourIcon\r\n      );\r\n    });\r\n\r\n    box3HourDescription[indexWeather - 1].hourDesc.forEach((item) => {\r\n      let classHourDesc = item.className.split(\" \")[0];\r\n\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classHourDesc\r\n      );\r\n    });\r\n\r\n    box3HourCelsius[indexWeather - 1].iconsCelsius.forEach((item) => {\r\n      let classHourCelsius = item.className.split(\" \")[0];\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classHourCelsius\r\n      );\r\n    });\r\n\r\n    buttons[indexWeather - 1].buttons.forEach((item) => {\r\n      let classBtn = item.className;\r\n      item.className = getCurrentImage(\r\n        result.current.idIcon,\r\n        isDayOrNight,\r\n        classBtn\r\n      );\r\n    });\r\n  };\r\n\r\n  const fetchWeahter = (item) => {\r\n    showLoader();\r\n    const localStorageWeather = JSON.parse(\r\n      localStorage.getItem(\"weather\") || \"[]\"\r\n    );\r\n\r\n    if (localStorageWeather.length > 0) {\r\n      let cityInputValue = item.city\r\n        .normalize(\"NFD\")\r\n        .replace(/[\\u0300-\\u036f]/g, \"\")\r\n        .replace(/\\u0142/g, \"l\")\r\n        .toLowerCase();\r\n      let countryInputValue = item.country.toLowerCase();\r\n\r\n      fetch(\"http://localhost:5000\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ cityInputValue, countryInputValue }),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n\r\n          throw new Error(\"Can't find location\");\r\n        })\r\n        .then((result) => {\r\n          logoStart.style.display = \"none\";\r\n          flag = true;\r\n\r\n          const { city, country, current, timezone } = result;\r\n          const { sunrise, sunset } = current;\r\n\r\n          const todayDate = getCurrentDate();\r\n\r\n          if (sliderContent.children.length > 1) {\r\n            sliderContent.style.transitionDuration = \"0s\";\r\n            sliderContent.children[0].remove();\r\n            sliderContent.children[sliderContent.children.length - 1].remove();\r\n          }\r\n\r\n          const weatherFourHours = result.hourly.slice(0, 4);\r\n\r\n          const structureSlide = getStructureSlideWeather(\r\n            result,\r\n            city,\r\n            country,\r\n            current,\r\n            timezone,\r\n            todayDate,\r\n            weatherFourHours\r\n          );\r\n\r\n          const slide = document.createElement(\"div\");\r\n          slide.className = \"slider__image-wrapper\";\r\n          slide.innerHTML = structureSlide;\r\n\r\n          sliderContent.appendChild(slide);\r\n\r\n          const {\r\n            dotsWrapper,\r\n            sliderBoxes3Mobile,\r\n            sliderBoxes4,\r\n            sliderBoxesDays4,\r\n            detailsTitle,\r\n            detailsWeather,\r\n            innerBoxFour,\r\n            buttonsButtom,\r\n          } = getElementsApp(result);\r\n\r\n          const { isDayOrNight } = checkCurrentDayOrNight(\r\n            timezone,\r\n            sunrise,\r\n            sunset\r\n          );\r\n\r\n          dotsWrapper.innerHTML = \"\";\r\n          createDots(localStorageWeather);\r\n\r\n          setActiveStylesWhenRefresh(result, isDayOrNight);\r\n\r\n          if (indexWeather - 1 === 0) {\r\n            const { isDayOrNight } = checkCurrentDayOrNight(\r\n              timezone,\r\n              sunrise,\r\n              sunset\r\n            );\r\n\r\n            const iconId = current.idIcon;\r\n\r\n            const currentClass = bgImageContainer.className.split(\" \")[0];\r\n\r\n            const nameClassBg = getCurrentImage(\r\n              iconId,\r\n              isDayOrNight,\r\n              currentClass\r\n            );\r\n            bgImageContainer.className = nameClassBg;\r\n          }\r\n\r\n          let timeClearTwo = setInterval(() => {\r\n            const lcStorage = JSON.parse(localStorage.getItem(\"weather\") || []);\r\n\r\n            clock(result, timezone);\r\n            if (lcStorage.length === 0) {\r\n              clearInterval(timeClearTwo);\r\n            }\r\n          }, 1000);\r\n\r\n          const sliderBox2Boxes = document.querySelector(\r\n            \".slider__box-2-boxes\"\r\n          );\r\n          sliderBox2Boxes.className = `slider__box-2-boxes-${result.city}`;\r\n          sliderBox2Boxes.style.position = \"relative\";\r\n          sliderBox2Boxes.style.margin = \"auto\";\r\n          sliderBox2Boxes.style.height = `calc(${80}% - ${9}px)`;\r\n          sliderBox2Boxes.style.width = 99 + \"%\";\r\n\r\n          const elementCanvas = document.createElement(\"canvas\");\r\n          elementCanvas.className = `myChart-${result.city.replace(\r\n            /\\s/g,\r\n            \"-\"\r\n          )}`;\r\n          sliderBox2Boxes.appendChild(elementCanvas);\r\n\r\n          searchInputCity.removeAttribute(\"style\");\r\n          searchInputCountry.removeAttribute(\"style\");\r\n          buttonSearch.removeAttribute(\"style\");\r\n          buttonRemove.removeAttribute(\"style\");\r\n\r\n          const config = getChartData(result, timezone);\r\n\r\n          let chartFetch = new Chart(\r\n            document.querySelector(\r\n              `.myChart-${result.city.replace(/\\s/g, \"-\")}`\r\n            ),\r\n            config\r\n          );\r\n\r\n          chartFetch.destroy();\r\n\r\n          chartFetch = new Chart(\r\n            document.querySelector(\r\n              `.myChart-${result.city.replace(/\\s/g, \"-\")}`\r\n            ),\r\n            config\r\n          );\r\n\r\n          defaultVisiblityDetailsButton(buttonsButtom, sliderBoxes4);\r\n\r\n          buttonsButtom.forEach((item, index) => {\r\n            item.addEventListener(\"click\", (e) =>\r\n              handleClickButtonCheckWeather(\r\n                e,\r\n                index,\r\n                detailsWeather,\r\n                buttonsButtom,\r\n                innerBoxFour,\r\n                sliderBoxes3Mobile,\r\n                sliderBoxesDays4,\r\n                sliderBoxes4\r\n              )\r\n            );\r\n\r\n            item.addEventListener(\"touchstart\", (e) =>\r\n              handleClickButtonCheckWeather(\r\n                e,\r\n                index,\r\n                detailsWeather,\r\n                buttonsButtom,\r\n                innerBoxFour,\r\n                sliderBoxes3Mobile,\r\n                sliderBoxesDays4,\r\n                sliderBoxes4\r\n              )\r\n            );\r\n          });\r\n\r\n          createCopySlides(result, config);\r\n\r\n          window.addEventListener(\"resize\", () =>\r\n            CheckSizeWindow(\r\n              buttonsButtom,\r\n              sliderBoxes3Mobile,\r\n              sliderBoxesDays4,\r\n              sliderBoxes4,\r\n              innerBoxFour,\r\n              detailsTitle\r\n            )\r\n          );\r\n\r\n          bgImageContainer.style.color = `blur(${2}px)`;\r\n          bgImageContainer.style.webkitFilter = `blur(${2}px)`;\r\n        })\r\n        .catch((err) => {\r\n          msgAlert.innerHTML = err.message;\r\n          setTimeout(() => (msgAlert.innerHTML = \"\"), 2000);\r\n        });\r\n    }\r\n  };\r\n\r\n  let idInterval = window.setInterval(() => {\r\n    if (indexWeather < localStorageWeather.length) {\r\n      const element = localStorageWeather[indexWeather];\r\n      fetchWeahter(element);\r\n      indexWeather++;\r\n    } else {\r\n      window.clearInterval(idInterval);\r\n      let clearInt = setInterval(() => {\r\n        if (document.readyState === \"complete\") {\r\n          const svgLoader = document.querySelector(\".svg-loader\");\r\n          let clearTime = setTimeout(() => {\r\n            clearInterval(clearInt);\r\n            clearTimeout(clearTime);\r\n            const dayTime = checkPeriodOfCurrentDay();\r\n            const svgWrapper = document.querySelector(\".slider__svg-wrapper\");\r\n\r\n            dayTime\r\n              ? (svgWrapper.className = \"slider__svg-wrapper day hide\")\r\n              : (svgWrapper.className = \"slider__svg-wrapper night hide\");\r\n\r\n            svgLoader.setAttribute(\"class\", \"svg-loader hide\");\r\n          }, 3000);\r\n        }\r\n      }, 100);\r\n    }\r\n  }, 1000);\r\n\r\n  const checkCurrentDayOrNight = (timezone, sunrise, sunset) => {\r\n    const currentDateUtc = utcToZonedTime(new Date(), timezone);\r\n    const timeCountry = format(currentDateUtc, \"yyyy-MM-dd HH:mm:ssXXX\");\r\n    let currentTimeCountry = new Date(timeCountry).getTime();\r\n\r\n    const dateUtcSunrise = utcToZonedTime(new Date(sunrise * 1000), timezone);\r\n    const countryTimeSunrise = format(dateUtcSunrise, \"yyyy-MM-dd HH:mm:ssXXX\");\r\n    let dateSunrise = new Date(countryTimeSunrise);\r\n    let timeSunriseMilliseconds = dateSunrise.getTime();\r\n\r\n    const dateUtcSunset = utcToZonedTime(new Date(sunset * 1000), timezone);\r\n    const countryTimeSunset = format(dateUtcSunset, \"yyyy-MM-dd HH:mm:ssXXX\");\r\n    let dateSunset = new Date(countryTimeSunset);\r\n    let timeSunsetMilliseconds = dateSunset.getTime();\r\n\r\n    let isDayOrNight =\r\n      currentTimeCountry > timeSunriseMilliseconds &&\r\n      currentTimeCountry < timeSunsetMilliseconds;\r\n\r\n    return { isDayOrNight, timeSunriseMilliseconds, timeSunsetMilliseconds };\r\n  };\r\n\r\n  const setClassSearchBar = (iconId, isDayOrNight) => {\r\n    const classButtonRemove = buttonRemove.className;\r\n    const classButtonSearch = buttonSearch.className;\r\n    const classSearchInputCity = searchInputCity.className;\r\n    const classSearchInputCountry = searchInputCountry.className;\r\n\r\n    searchInputCity.className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      classSearchInputCity\r\n    );\r\n    searchInputCountry.className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      classSearchInputCountry\r\n    );\r\n    buttonRemove.className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      classButtonRemove\r\n    );\r\n    buttonSearch.className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      classButtonSearch\r\n    );\r\n  };\r\n\r\n  const setClassActiveStyles = (iconId, isDayOrNight, result, localIndex) => {\r\n    const {\r\n      buttons,\r\n      box3HourCelsius,\r\n      box3HourTime,\r\n      box3HourTemp,\r\n      box3HourIcon,\r\n      box3HourDescription,\r\n      box4HourCelsious,\r\n      box4CurrentDescription,\r\n      box4CurrentIcons,\r\n      box4CurrentTemp,\r\n      box4DaysLable,\r\n      box4DayTimes,\r\n      box4HourTimes,\r\n      box4HourTemps,\r\n      box4HourIcons,\r\n      box4HourDescription,\r\n      box4IconsDay,\r\n      box4IconsNight,\r\n      box4NightTimes,\r\n      box4TempDay,\r\n      box4TempNight,\r\n      innerBox1All,\r\n      innerBox2All,\r\n      innerBox3All,\r\n      innerBox4All,\r\n      innerBox1CityAll,\r\n      innerBox1DateAll,\r\n      sliderBox2Title,\r\n      sliderBox3Title,\r\n      sliderBox4Title,\r\n      sliderButtonsPanel,\r\n      sliderCelsius1,\r\n      sliderDesc1,\r\n      sliderDots,\r\n      sliderIcon1,\r\n      sliderTemp1,\r\n      timesCountry,\r\n    } = getElementsApp(result);\r\n\r\n    const localStorageWeather = JSON.parse(\r\n      localStorage.getItem(\"weather\") || \"[]\"\r\n    );\r\n\r\n    const boxClass = innerBox1All[localIndex].className;\r\n    innerBox1All[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxClass\r\n    );\r\n\r\n    const boxDateclass = innerBox1DateAll[localIndex].className;\r\n    innerBox1DateAll[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxDateclass\r\n    );\r\n\r\n    const boxCityclass = innerBox1CityAll[localIndex].className;\r\n    innerBox1CityAll[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxCityclass\r\n    );\r\n\r\n    const boxClassTime = timesCountry[localIndex].className;\r\n    timesCountry[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxClassTime\r\n    );\r\n\r\n    const boxClassTemp1 = sliderTemp1[localIndex].className;\r\n    sliderTemp1[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxClassTemp1\r\n    );\r\n\r\n    const boxClassCel1 = sliderCelsius1[localIndex].className;\r\n    sliderCelsius1[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxClassCel1\r\n    );\r\n\r\n    const boxClassDec1 = sliderDesc1[localIndex].className;\r\n    sliderDesc1[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxClassDec1\r\n    );\r\n\r\n    const boxClassIco1 = sliderIcon1[localIndex].className;\r\n    sliderIcon1[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxClassIco1\r\n    );\r\n\r\n    const boxClass2 = innerBox2All[localIndex].className;\r\n    innerBox2All[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxClass2\r\n    );\r\n\r\n    const boxClass3 = innerBox3All[localIndex].className;\r\n    innerBox3All[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxClass3\r\n    );\r\n\r\n    const boxClass4 = innerBox4All[localIndex].className;\r\n    innerBox4All[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      boxClass4\r\n    );\r\n\r\n    const btnPanelClass = sliderButtonsPanel[localIndex].className;\r\n    sliderButtonsPanel[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      btnPanelClass\r\n    );\r\n\r\n    sliderDots.forEach((item, index) => {\r\n      const dotClass = item.className;\r\n      item.className = `${dotClass} ${localStorageWeather[0].nameClass}`;\r\n    });\r\n\r\n    const classTitleBox2 = sliderBox2Title[localIndex].className;\r\n    sliderBox2Title[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      classTitleBox2\r\n    );\r\n\r\n    const classTitleBox3 = sliderBox3Title[localIndex].className;\r\n    sliderBox3Title[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      classTitleBox3\r\n    );\r\n\r\n    const classTitleBox4 = sliderBox4Title[localIndex].className;\r\n    sliderBox4Title[localIndex].className = getCurrentImage(\r\n      iconId,\r\n      isDayOrNight,\r\n      classTitleBox4\r\n    );\r\n\r\n    box4CurrentIcons[localIndex].detailsIcons.forEach((item) => {\r\n      const boxDetails = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, boxDetails);\r\n    });\r\n\r\n    box4CurrentTemp[localIndex].currentTemp.forEach((item) => {\r\n      const classTemp = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classTemp);\r\n    });\r\n\r\n    box4CurrentDescription[localIndex].currentDescription.forEach((item) => {\r\n      const classDescription = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classDescription);\r\n    });\r\n\r\n    box4DaysLable[localIndex].dayLabel.forEach((item) => {\r\n      const classLabel1 = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classLabel1);\r\n    });\r\n\r\n    box4DayTimes[localIndex].dayTime.forEach((item) => {\r\n      const classDayTime = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classDayTime);\r\n    });\r\n\r\n    box4NightTimes[localIndex].nightTime.forEach((item) => {\r\n      const classNightTime = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classNightTime);\r\n    });\r\n\r\n    box4TempDay[localIndex].dayTemp.forEach((item) => {\r\n      const classTempDay = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classTempDay);\r\n    });\r\n\r\n    box4TempNight[localIndex].dayNight.forEach((item) => {\r\n      const classTempNight = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classTempNight);\r\n    });\r\n\r\n    box4IconsDay[localIndex].iconDay.forEach((item) => {\r\n      const classIconDay = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classIconDay);\r\n    });\r\n\r\n    box4IconsNight[localIndex].iconNight.forEach((item) => {\r\n      const classIconNight = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classIconNight);\r\n    });\r\n\r\n    box4HourTimes[localIndex].hours.forEach((item) => {\r\n      const classHour = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classHour);\r\n    });\r\n\r\n    box4HourTemps[localIndex].hoursTemps.forEach((item) => {\r\n      const classHourTemp = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classHourTemp);\r\n    });\r\n\r\n    box4HourIcons[localIndex].hoursIcons.forEach((item) => {\r\n      const classHourIcon = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classHourIcon);\r\n    });\r\n\r\n    box4HourDescription[localIndex].hoursDesc.forEach((item) => {\r\n      const classHourDesc = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classHourDesc);\r\n    });\r\n\r\n    box4HourCelsious[localIndex].hoursCelsiusIcon.forEach((item) => {\r\n      const classHourCelsius = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classHourCelsius);\r\n    });\r\n\r\n    box3HourTime[localIndex].hours.forEach((item) => {\r\n      const classHour = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classHour);\r\n    });\r\n\r\n    box3HourTemp[localIndex].hourTemp.forEach((item) => {\r\n      const classHourTemp = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classHourTemp);\r\n    });\r\n\r\n    box3HourIcon[localIndex].hourIcon.forEach((item) => {\r\n      const classHourIcon = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classHourIcon);\r\n    });\r\n\r\n    box3HourDescription[localIndex].hourDesc.forEach((item) => {\r\n      const classHourDesc = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classHourDesc);\r\n    });\r\n\r\n    box3HourCelsius[localIndex].iconsCelsius.forEach((item) => {\r\n      const classHourCelsius = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classHourCelsius);\r\n    });\r\n\r\n    buttons[localIndex].buttons.forEach((item) => {\r\n      const classBtn = item.className;\r\n\r\n      item.className = getCurrentImage(iconId, isDayOrNight, classBtn);\r\n    });\r\n  };\r\n\r\n  const getCurrentIcon = (currentWeatherIdIcon, isDayOrNight) => {\r\n    switch (currentWeatherIdIcon) {\r\n      case 200:\r\n      case 201:\r\n      case 202:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-storm-showers\"></i>`\r\n          : `<i class=\"wi wi-night-alt-storm-showers\"></i>`;\r\n        break;\r\n      case 210:\r\n      case 211:\r\n      case 212:\r\n      case 221:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-lightning\"></i>`\r\n          : `<i class=\"wi wi-night-alt-lightning\"></i>`;\r\n        break;\r\n      case 230:\r\n      case 231:\r\n      case 232:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-thunderstorm\"></i>`\r\n          : `<i class=\"wi wi-night-alt-thunderstorm\"></i>`;\r\n        break;\r\n      case 300:\r\n      case 301:\r\n      case 302:\r\n      case 310:\r\n      case 311:\r\n      case 312:\r\n      case 313:\r\n      case 314:\r\n      case 321:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-sprinkle\"></i>`\r\n          : `<i class=\"wi wi-night-alt-sprinkle\"></i>`;\r\n        break;\r\n      case 500:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-sprinkle\"></i>`\r\n          : `<i class=\"wi wi-night-alt-sprinkle\"></i>`;\r\n        break;\r\n      case 501:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-rain\"></i>`\r\n          : `<i class=\"wi wi-night-alt-rain\"></i>`;\r\n        break;\r\n      case 502:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-rain-wind\"></i>`\r\n          : `<i class=\"wi wi-night-alt-rain-wind\"></i>`;\r\n        break;\r\n      case 503:\r\n      case 504:\r\n        return `<i class=\"wi wi-rain-wind\"></i>`;\r\n        break;\r\n      case 511:\r\n        return `<i class=\"wi wi-rain-mix\"></i>`;\r\n        break;\r\n      case 520:\r\n      case 521:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-showers\"></i>`\r\n          : `<i class=\"wi wi-night-alt-showers\"></i>`;\r\n        break;\r\n      case 522:\r\n      case 531:\r\n        return `<i class=\"wi wi-showers\"></i>`;\r\n        break;\r\n      case 600:\r\n      case 601:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-snow\"></i>`\r\n          : `<i class=\"wi wi-night-alt-snow\"></i>`;\r\n        break;\r\n      case 602:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-snow-wind\"></i>`\r\n          : `<i class=\"wi wi-night-alt-snow-wind\"></i>`;\r\n        break;\r\n      case 611:\r\n      case 612:\r\n      case 613:\r\n      case 615:\r\n      case 616:\r\n      case 620:\r\n      case 621:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-sleet\"></i>`\r\n          : `<i class=\"wi wi-night-alt-sleet\"></i>`;\r\n        break;\r\n      case 622:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-snow-wind\"></i>`\r\n          : `<i class=\"wi wi-night-alt-snow-wind\"></i>`;\r\n        break;\r\n      case 701:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-fog\"></i>`\r\n          : `<i class=\"wi wi-night-fog\"></i>`;\r\n        break;\r\n      case 711:\r\n        return `<i class=\"wi wi-smoke\"></i>`;\r\n        break;\r\n      case 721:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-haze\"></i>`\r\n          : `<i class=\"wi wi-night-fog\"></i>`;\r\n        break;\r\n      case 731:\r\n        return `<i class=\"wi wi-dust\"></i>`;\r\n        break;\r\n      case 741:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-fog\"></i>`\r\n          : `<i class=\"wi wi-night-fog\"></i>`;\r\n        break;\r\n      case 751:\r\n        return `<i class=\"wi wi-sandstorm\"></i>`;\r\n        break;\r\n      case 761:\r\n        return `<i class=\"wi wi-dust\"></i>`;\r\n        break;\r\n      case 762:\r\n        return `<i class=\"wi wi-volcano\"></i>`;\r\n        break;\r\n      case 771:\r\n        return `<i class=\"wi wi-strong-wind\"></i>`;\r\n        break;\r\n      case 781:\r\n        return `<i class=\"wi wi-tornado\"></i>`;\r\n        break;\r\n      case 800:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-sunny\"></i>`\r\n          : `<i class=\"wi wi-night-clear\"></i>`;\r\n        break;\r\n      case 801:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-sunny-overcast\"></i>`\r\n          : `<i class=\"wi wi-night-alt-partly-cloudy\"></i>`;\r\n        break;\r\n      case 802:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-cloudy\"></i>`\r\n          : `<i class=\"wi wi-night-alt-cloudy\"></i>`;\r\n        break;\r\n      case 803:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-day-cloudy-high\"></i>`\r\n          : `<i class=\"wi wi-night-alt-cloudy-high\"></i>`;\r\n        break;\r\n      case 804:\r\n        return isDayOrNight\r\n          ? `<i class=\"wi wi-cloudy\"></i>`\r\n          : `<i class=\"wi wi-cloudy\"></i>`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const getCurrentImage = (weatherIdIcon, isDayOrNight, currentClass) => {\r\n    switch (weatherIdIcon) {\r\n      case 200:\r\n      case 201:\r\n      case 202:\r\n      case 210:\r\n      case 211:\r\n      case 212:\r\n      case 221:\r\n      case 230:\r\n      case 231:\r\n      case 232:\r\n        return isDayOrNight\r\n          ? `${currentClass} thunderstorm-day`\r\n          : `${currentClass} thunderstorm-night`;\r\n        break;\r\n      case 300:\r\n      case 301:\r\n      case 302:\r\n      case 310:\r\n      case 311:\r\n      case 312:\r\n      case 313:\r\n      case 314:\r\n      case 321:\r\n      case 500:\r\n      case 501:\r\n      case 502:\r\n      case 503:\r\n      case 504:\r\n      case 511:\r\n      case 520:\r\n      case 521:\r\n      case 522:\r\n      case 531:\r\n        return isDayOrNight\r\n          ? `${currentClass} rain-day`\r\n          : `${currentClass} rain-night`;\r\n        break;\r\n      case 600:\r\n      case 601:\r\n      case 602:\r\n      case 611:\r\n      case 612:\r\n      case 613:\r\n      case 615:\r\n      case 616:\r\n      case 620:\r\n      case 621:\r\n      case 622:\r\n        return isDayOrNight\r\n          ? `${currentClass} snow-day`\r\n          : `${currentClass} snow-night`;\r\n        break;\r\n      case 701:\r\n      case 721:\r\n      case 741:\r\n        return isDayOrNight\r\n          ? `${currentClass} fog-day`\r\n          : `${currentClass} fog-night`;\r\n        break;\r\n      case 771:\r\n        return `${currentClass} squall-day-night`;\r\n        break;\r\n      case 781:\r\n        return `${currentClass} tornado`;\r\n        break;\r\n      case 800:\r\n        return isDayOrNight\r\n          ? `${currentClass} clear-sky-day`\r\n          : `${currentClass} clear-sky-night`;\r\n        break;\r\n      case 711:\r\n      case 731:\r\n      case 751:\r\n      case 761:\r\n      case 762:\r\n      case 801:\r\n      case 802:\r\n      case 803:\r\n      case 804:\r\n        return isDayOrNight\r\n          ? `${currentClass} clouds-day`\r\n          : `${currentClass} clouds-night`;\r\n        break;\r\n      default:\r\n        return isDayOrNight\r\n          ? `${currentClass} clear-sky-day`\r\n          : `${currentClass} clear-sky-night`;\r\n        break;\r\n    }\r\n  };\r\n\r\n  const getStructureSlideWeather = (\r\n    result,\r\n    city,\r\n    country,\r\n    current,\r\n    timezone,\r\n    todayDate,\r\n    weatherFourHours\r\n  ) => {\r\n    const { sunrise, sunset } = current;\r\n    const { isDayOrNight, timeSunriseMilliseconds, timeSunsetMilliseconds } =\r\n      checkCurrentDayOrNight(timezone, sunrise, sunset);\r\n\r\n    const currentWeatherIdIcon = result.current.idIcon;\r\n\r\n    const checkTimeHourly = (hourlyTime) => {\r\n      const dateHourly = utcToZonedTime(new Date(hourlyTime * 1000), timezone);\r\n      const timeHourly = format(dateHourly, \"yyyy-MM-dd HH:mm:ssXXX\");\r\n      let dateSunrise = new Date(timeHourly);\r\n      let timeMilliseconds = dateSunrise.getTime();\r\n      let checkDayNight =\r\n        timeMilliseconds > timeSunriseMilliseconds &&\r\n        timeMilliseconds < timeSunsetMilliseconds;\r\n\r\n      return checkDayNight;\r\n    };\r\n\r\n    return `\r\n        <div class=\"slider__inner-box\">\r\n            <div class=\"slider__inner-box-one-left\">\r\n                <div class=\"slider__date-wrapper\">\r\n                    <p class=\"slider__current-date\">${todayDate}</p>\r\n                </div>\r\n                <div class=\"slider__temperature-wrapper\">\r\n                    <p class=\"slider__temperature\">\r\n                        ${current.temp.toFixed(1)}\r\n                        <span class=\"slider__celsius-icon\"\r\n                        ><i class=\"wi wi-degrees\"></i>c</span>\r\n                    </p>\r\n                </div>\r\n                <div class=\"slider__city-wrapper\">\r\n                    <p class=\"slider__city\">${city}, ${country}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"slider__inner-box-one-right\">\r\n                <div class=\"slider__icon-wrapper\">\r\n                    <span class=\"slider__weather-icon\"\r\n                    >${getCurrentIcon(currentWeatherIdIcon, isDayOrNight)}\r\n                    </span>\r\n                </div>\r\n                <div class=\"slider__description-wrapper\">\r\n                    <p class=\"slider__image-description\">${\r\n                      current.description\r\n                    }</p>\r\n                </div>\r\n                <div class=\"slider__time-wrapper\">\r\n                    <p class=\"slider__country-time slider__country-time-${result.city.replace(\r\n                      /\\s/g,\r\n                      \"-\"\r\n                    )}\"></p>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"slider__inner-box\">\r\n          <h3 class=\"slider__box-2-title\">Hourly temperature</h3>\r\n          <div class=\"slider__box-2-boxes\">\r\n           \r\n          </div>\r\n        </div>\r\n        <div class=\"slider__inner-box\">\r\n          <h3 class=\"slider__box-3-title\">Hourly weather</h3>\r\n          <div class=\"slider__box-3-boxes\">\r\n          ${weatherFourHours\r\n            .map(\r\n              (item) => `<div class=\"slider__box-3\">\r\n            <p class=\"slider__hourly-weather-time\">${new Date(\r\n              format(\r\n                utcToZonedTime(new Date(item.data * 1000), timezone),\r\n                \"yyyy-MM-dd HH:mm:ssXXX\"\r\n              )\r\n            )\r\n              .toLocaleString(\"en-US\", {\r\n                hour: \"numeric\",\r\n                hour12: true,\r\n              })\r\n              .replace(\"PM\", \"p.m.\")\r\n              .replace(\"AM\", \"a.m.\")}</p>\r\n                  <div class=\"slider__box-3-wrapper\">\r\n                      <div class=\"slider__box-3-left\">\r\n                          <p class=\"slider__hourly-weather-temperature-wrapper\">\r\n                              ${item.temp.toFixed(1)}\r\n                              <span class=\"slider__hourly-icon-celsius\"><i class=\"wi wi-degrees\"></i>c</span>\r\n                          </p>\r\n                      </div>\r\n                      <div class=\"slider__box-3-right\">\r\n                          <span class=\"slider__hourly-icon-weather\">${getCurrentIcon(\r\n                            item.idIcon,\r\n                            checkTimeHourly(item.data)\r\n                          )}</span>\r\n                      </div>\r\n                  </div>\r\n                  <p class=\"slider__hourly-weather-description\">\r\n                  ${item.description}\r\n                  </p>\r\n            </div>`\r\n            )\r\n            .join(\"\\n\")}\r\n          </div>\r\n        </div>\r\n        <div class=\"slider__inner-box\">\r\n          <h3 class=\"slider__box-4-title\">Details</h3>\r\n          <div class=\"slider__inner-box-4 slider__inner-box-4-panel-${result.city.replace(\r\n            /\\s/g,\r\n            \"-\"\r\n          )}\">\r\n            <div class=\"slider__box-4-boxes\">\r\n              <div class=\"slider__box-4 slider__box-4-${result.city.replace(\r\n                /\\s/g,\r\n                \"-\"\r\n              )}\">\r\n                <span class=\"slider__box-details-icon\">\r\n                  <i class=\"wi wi-thermometer\"></i>\r\n                </span>\r\n                <div class=\"slider__box-4-part2\">\r\n                  <div class=\"slider__box-4-part3\">\r\n                    <p class=\"slider__box-details-text\">\r\n                      ${current.feels_like.toFixed(1)}\r\n                      <span class=\"slider__box-details-text-icon\">\r\n                        <i class=\"wi wi-degrees\"></i>c\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div class=\"slider__box-4-part4\">\r\n                    <p class=\"slider__box-details-description\">\r\n                      Feels like\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"slider__box-4 slider__box-4-${result.city.replace(\r\n                /\\s/g,\r\n                \"-\"\r\n              )}\">\r\n                <span class=\"slider__box-details-icon\">\r\n                  <i class=\"wi wi-raindrops\"></i>\r\n                </span>\r\n                <div class=\"slider__box-4-part2\">\r\n                  <div class=\"slider__box-4-part3\">\r\n                    <p class=\"slider__box-details-text\">${current.humidity}%</p>\r\n                  </div>\r\n                  <div class=\"slider__box-4-part4\">\r\n                    <p class=\"slider__box-details-description\">\r\n                      Humidity\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"slider__box-4 slider__box-4-${result.city.replace(\r\n                /\\s/g,\r\n                \"-\"\r\n              )}\">\r\n                <span class=\"slider__box-details-icon\">\r\n                  <i class=\"wi wi-strong-wind\"></i>\r\n                </span>\r\n                <div class=\"slider__box-4-part2\">\r\n                  <div class=\"slider__box-4-part3\">\r\n                    <p class=\"slider__box-details-text\">${current.wind_speed.toFixed(\r\n                      1\r\n                    )}/km</p>\r\n                  </div>\r\n                  <div class=\"slider__box-4-part4\">\r\n                    <p class=\"slider__box-details-description\">Wind</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"slider__box-4 slider__box-4-${result.city.replace(\r\n                /\\s/g,\r\n                \"-\"\r\n              )}\">\r\n                <span class=\"slider__box-details-icon\">\r\n                  <i class=\"wi wi-barometer\"></i>\r\n                </span>\r\n                <div class=\"slider__box-4-part2\">\r\n                  <div class=\"slider__box-4-part3\">\r\n                    <p class=\"slider__box-details-text\">${current.pressure}</p>\r\n                  </div>\r\n                  <div class=\"slider__box-4-part4\">\r\n                    <p class=\"slider__box-details-description\">\r\n                      Pressure\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"slider__box-4 slider__box-4-${result.city.replace(\r\n                /\\s/g,\r\n                \"-\"\r\n              )}\">\r\n                <span class=\"slider__box-details-icon\">\r\n                  <i class=\"wi wi-thermometer\"></i>\r\n                </span>\r\n                <div class=\"slider__box-4-part2\">\r\n                  <div class=\"slider__box-4-part3\">\r\n                    <p class=\"slider__box-details-text\">${current.dew_point.toFixed(\r\n                      1\r\n                    )}</p>\r\n                  </div>\r\n                  <div class=\"slider__box-4-part4\">\r\n                    <p class=\"slider__box-details-description\">\r\n                      Dev point\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"slider__box-4 slider__box-4-${result.city.replace(\r\n                /\\s/g,\r\n                \"-\"\r\n              )}\">\r\n                <span class=\"slider__box-details-icon\">\r\n                  <i class=\"fas fa-eye\"></i>\r\n                </span>\r\n                <div class=\"slider__box-4-part2\">\r\n                  <div class=\"slider__box-4-part3\">\r\n                    <p class=\"slider__box-details-text\">${\r\n                      current.visibility > 1000\r\n                        ? current.visibility / 1000 + \"/km\"\r\n                        : current.visibility + \"/m\"\r\n                    }</p>\r\n                  </div>\r\n                  <div class=\"slider__box-4-part4\">\r\n                    <p class=\"slider__box-details-description\">\r\n                      Visibility\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"slider__box-4-boxes--days-forecast\">\r\n        \r\n            ${result.daily\r\n              .map(\r\n                (\r\n                  item\r\n                ) => `<div class=\"slider__box-4-days slider__box-4-days-${result.city.replace(\r\n                  /\\s/g,\r\n                  \"-\"\r\n                )}\">\r\n              <p class=\"slider__box-4-days-day\">${new Date(item.data * 1000)\r\n                .toDateString()\r\n                .slice(0, 3)}</p>\r\n                        <div class=\"slider__box-4-days-left\">\r\n                            <p class=\"slider__box-4-day-time\">Day</p>\r\n                            <p class=\"slider__box-4-days-details-text-day\">\r\n                            ${item.tempDay.toFixed(1)}\r\n                                <span class=\"slider__box-4-days-details-text-icon\">\r\n                                    <i class=\"wi wi-degrees\"></i>c\r\n                                </span>\r\n                            </p>\r\n                            <span class=\"slider__box-4-days-icon-weather-day\"\r\n                            >${getCurrentIcon(item.idIcon, true)}</span>\r\n                        </div>\r\n                        <div class=\"slider__box-4-days-right\">\r\n                            <p class=\"slider__box-4-day-night\">Night</p>\r\n                            <p class=\"slider__box-4-days-details-text-night\">\r\n                            ${item.tempNight.toFixed(1)}\r\n                                <span class=\"slider__box-4-days-details-text-icon\">\r\n                                    <i class=\"wi wi-degrees\"></i>c\r\n                                </span>\r\n                            </p>\r\n                            <span class=\"slider__box-4-days-icon-weather-night\"\r\n                                >${getCurrentIcon(item.idIcon, false)}</span>\r\n                        </div>\r\n                    </div>`\r\n              )\r\n              .join(\"\\n\")}\r\n          \r\n            </div>\r\n\r\n            <div class=\"slider__box-4-boxes--hourly-weather\">\r\n                ${result.hourly\r\n                  .map(\r\n                    (\r\n                      item\r\n                    ) => `<div class=\"slider__box-3-mobile slider__box-3-mobile-${result.city.replace(\r\n                      /\\s/g,\r\n                      \"-\"\r\n                    )}\">\r\n                            <p class=\"slider__hourly-time-mobile\">${new Date(\r\n                              format(\r\n                                utcToZonedTime(\r\n                                  new Date(item.data * 1000),\r\n                                  timezone\r\n                                ),\r\n                                \"yyyy-MM-dd HH:mm:ssXXX\"\r\n                              )\r\n                            )\r\n                              .toLocaleString(\"en-US\", {\r\n                                hour: \"numeric\",\r\n                                hour12: true,\r\n                              })\r\n                              .replace(\"PM\", \"p.m.\")\r\n                              .replace(\"AM\", \"a.m.\")}</p>\r\n                                <div class=\"slider__box-3-wrapper-mobile\">\r\n                                    <div class=\"slider__box-3-left-mobile\">\r\n                                        <p class=\"slider__hourly-temperature-mobile\">\r\n                                            ${item.temp.toFixed(1)}\r\n                                            <span class=\"slider__hourly-icon-mobile\"\r\n                                                ><i class=\"wi wi-degrees\"></i>c</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class=\"slider__box-3-right-mobile\">\r\n                                        <span class=\"slider__hourly-icon-weather-mobile\"\r\n                                            >${getCurrentIcon(\r\n                                              item.idIcon,\r\n                                              checkTimeHourly(item.data)\r\n                                            )}</span>\r\n                                    </div>\r\n                                </div>\r\n                            <p class=\"slider__hourly-weather-description-mobile\">\r\n                                ${item.description}\r\n                            </p>\r\n                        </div>`\r\n                  )\r\n                  .join(\"\\n\")}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"slider__bottom-panel slider__bottom-panel-${result.city.replace(\r\n          /\\s/g,\r\n          \"-\"\r\n        )}\">\r\n          <button class=\"slider__bottom-btn slider__bottom-btn-${result.city.replace(\r\n            /\\s/g,\r\n            \"-\"\r\n          )}\">Details</button\r\n          ><button class=\"slider__bottom-btn slider__bottom-btn-${result.city.replace(\r\n            /\\s/g,\r\n            \"-\"\r\n          )}\">6 days forecast</button\r\n          ><button class=\"slider__bottom-btn slider__bottom-btn-${result.city.replace(\r\n            /\\s/g,\r\n            \"-\"\r\n          )}\">Hourly forecast</button>\r\n        </div>`;\r\n  };\r\n\r\n  const sizeSliderDefaultAndResizeLess1000 = () => {\r\n    let diff2 = (1000 * 100) / window.innerWidth - (1000 * 100) / 1000;\r\n    let widthPx = (window.innerWidth / 100) * 100 - diff2;\r\n    appWrapper.style.width = widthPx + \"px\";\r\n  };\r\n\r\n  if (window.innerWidth < 1000 && window.innerWidth > 767) {\r\n    sizeSliderDefaultAndResizeLess1000();\r\n  } else if (window.innerWidth <= 767) {\r\n    appWrapper.removeAttribute(\"style\");\r\n  }\r\n\r\n  const events = {\r\n    swipeUp: new Event(\"swipeUp\"),\r\n    swipeDown: new Event(\"swipeDown\"),\r\n    swipeLeft: new Event(\"swipeLeft\"),\r\n    swipeRight: new Event(\"swipeRight\"),\r\n  };\r\n\r\n  const showLoader = () => {\r\n    const dayTime = checkPeriodOfCurrentDay();\r\n    if (dayTime) {\r\n      svgWrapper.className = \"slider__svg-wrapper day\";\r\n    } else {\r\n      svgWrapper.className = \"slider__svg-wrapper night\";\r\n    }\r\n    svgLoader.setAttribute(\"class\", \"svg-loader\");\r\n  };\r\n\r\n  const hideLoader = () => {\r\n    const dayTime = checkPeriodOfCurrentDay();\r\n    let timeClean = setTimeout(() => {\r\n      if (dayTime) {\r\n        svgWrapper.className = \"slider__svg-wrapper hide\";\r\n      } else {\r\n        svgWrapper.className = \"slider__svg-wrapper hide\";\r\n      }\r\n\r\n      svgLoader.setAttribute(\"class\", \"svg-loader hide\");\r\n      clearTimeout(timeClean);\r\n    }, 500);\r\n  };\r\n\r\n  const checkBackgroundLoaded = (description) => {\r\n    switch (description) {\r\n      case \"clear-sky-day\":\r\n        let img1 = new Image();\r\n        img1.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Clear-day-1.jpg?alt=media&token=8834f4e8-a226-4173-b5b2-b890025976c5\";\r\n        img1.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"clear-sky-night\":\r\n        let img2 = new Image();\r\n        img2.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Clear-night.jpg?alt=media&token=197080c1-f461-45b1-9b4b-d68b20967418\";\r\n        img2.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"clouds-day\":\r\n        let img3 = new Image();\r\n        img3.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Clouds-day.jpg?alt=media&token=81afcae1-f9a5-414e-8c3f-c4244da3e1fb\";\r\n        img3.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"clouds-night\":\r\n        let img4 = new Image();\r\n        img4.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Clouds-night.jpg?alt=media&token=17cbae71-3f03-490f-aa63-2e08f720cffc\";\r\n        img4.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"rain-day\":\r\n        let img5 = new Image();\r\n        img5.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Rain-day.jpg?alt=media&token=bd119570-5618-4817-84a4-80615dc834ef\";\r\n        img5.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"rain-night\":\r\n        let img6 = new Image();\r\n        img6.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Rain-night-1.jpg?alt=media&token=cdfd7122-a210-4286-8297-f4704afd88a2\";\r\n        img6.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"snow-day\":\r\n        let img7 = new Image();\r\n        img7.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Snow-day.jpg?alt=media&token=442f207f-ed45-47c2-a8a9-e217a9c19f21\";\r\n        img7.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"snow-night\":\r\n        let img8 = new Image();\r\n        img8.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Snow-night.jpg?alt=media&token=064812b3-2975-4001-bce8-dca50d2f42ca\";\r\n        img8.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"fog-day\":\r\n        let img9 = new Image();\r\n        img9.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Fog-day.jpg?alt=media&token=201d3d94-5615-4a71-a191-94e7091b4eab\";\r\n        img9.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"fog-night\":\r\n        let img10 = new Image();\r\n        img10.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Fog-nigth.jpg?alt=media&token=10958719-f5ee-4f2b-b1d1-6c02c8a85fb1\";\r\n        img10.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"thunderstorm-day\":\r\n        let img11 = new Image();\r\n        img11.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Thunderstorm-day.jpg?alt=media&token=206107f9-9a19-4173-8759-7b704aa96fc4\";\r\n        img11.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"thunderstorm-night\":\r\n        let img12 = new Image();\r\n        img12.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Thunderstorm-night.jpg?alt=media&token=9fcd179b-31a4-48eb-93d5-bc7f6058cfde\";\r\n        img12.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"tornado\":\r\n        let img13 = new Image();\r\n        img13.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Tornado.jpg?alt=media&token=f78abe9e-bfd4-4af5-919c-5fc0fb516260\";\r\n        img13.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      case \"squall-day-night\":\r\n        let img14 = new Image();\r\n        img14.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Squall-day-night.jpg?alt=media&token=4ffc0d9d-96f5-429f-95d7-6a641cdef4f6\";\r\n        img14.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n      default:\r\n        let img15 = new Image();\r\n        img15.src =\r\n          \"https://firebasestorage.googleapis.com/v0/b/weather-app-79d32.appspot.com/o/Clear-day-1.jpg?alt=media&token=8834f4e8-a226-4173-b5b2-b890025976c5\";\r\n        img15.onload = () => {\r\n          hideLoader();\r\n        };\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSearchWeather = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      e.target[0].value !== \"\" &&\r\n      e.target[1].value !== \"\" &&\r\n      e.target[1].value.length > 2\r\n    )\r\n      showLoader();\r\n    let cityInputValue = e.target[0].value\r\n      .normalize(\"NFD\")\r\n      .replace(/[\\u0300-\\u036f]/g, \"\")\r\n      .replace(/\\u0142/g, \"l\")\r\n      .toLowerCase();\r\n    let countryInputValue = e.target[1].value.toLowerCase();\r\n\r\n    if (cityInputValue === \"\" || countryInputValue === \"\") {\r\n      msgAlert.innerHTML = \"Please fill in all fields\";\r\n      setTimeout(() => (msgAlert.innerHTML = \"\"), 2000);\r\n      return;\r\n    }\r\n\r\n    if (countryInputValue.length < 3) {\r\n      msgAlert.innerHTML = \"Country name is too short\";\r\n      setTimeout(() => (msgAlert.innerHTML = \"\"), 2000);\r\n      return;\r\n    }\r\n\r\n    fetch(\"http://localhost:5000\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ cityInputValue, countryInputValue }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n\r\n        throw new Error(\"Can't find location\");\r\n      })\r\n      .then((result) => {\r\n        const { city, country, current, timezone } = result;\r\n        logoStart.style.display = \"none\";\r\n        flag = true;\r\n\r\n        const { isDayOrNight } = checkCurrentDayOrNight(\r\n          result.timezone,\r\n          result.current.sunrise,\r\n          result.current.sunset\r\n        );\r\n\r\n        const iconId = result.current.idIcon;\r\n\r\n        const currentClass = bgImageContainer.className.split(\" \")[0];\r\n        const nameClass = getCurrentImage(iconId, isDayOrNight, currentClass);\r\n        const classMessage = infoMessage.className.split(\" \")[0];\r\n        const alertClass = getCurrentImage(iconId, isDayOrNight, classMessage);\r\n\r\n        checkBackgroundLoaded(nameClass.split(\" \")[1]);\r\n\r\n        const localStorageWeather = JSON.parse(\r\n          localStorage.getItem(\"weather\") || \"[]\"\r\n        );\r\n\r\n        const checkIsAdded = localStorageWeather.find(\r\n          (item) => item.city === result.city\r\n        );\r\n\r\n        if (checkIsAdded) {\r\n          msgAlert.innerHTML = \"City is already added\";\r\n          setTimeout(() => (msgAlert.innerHTML = \"\"), 2000);\r\n          return;\r\n        }\r\n\r\n        const detailsLocation = {\r\n          city: result.city,\r\n          country: result.country,\r\n          current: result.current,\r\n          hourly: result.hourly,\r\n          timezone: result.timezone,\r\n          nameClass: nameClass.split(\" \")[1],\r\n        };\r\n\r\n        weathersArray = [...weathersArray, detailsLocation];\r\n\r\n        const todayDate = getCurrentDate(timezone);\r\n\r\n        if (sliderContent.children.length > 1) {\r\n          sliderContent.style.transitionDuration = \"0s\";\r\n          sliderContent.children[0].remove();\r\n          sliderContent.children[sliderContent.children.length - 1].remove();\r\n        }\r\n\r\n        const weatherFourHours = result.hourly.slice(0, 4);\r\n\r\n        const structureSlide = getStructureSlideWeather(\r\n          result,\r\n          city,\r\n          country,\r\n          current,\r\n          timezone,\r\n          todayDate,\r\n          weatherFourHours\r\n        );\r\n\r\n        const slide = document.createElement(\"div\");\r\n        slide.className = \"slider__image-wrapper\";\r\n        slide.innerHTML = structureSlide;\r\n\r\n        sliderContent.appendChild(slide);\r\n\r\n        searchInputCity.removeAttribute(\"style\");\r\n        searchInputCountry.removeAttribute(\"style\");\r\n        buttonSearch.removeAttribute(\"style\");\r\n        buttonRemove.removeAttribute(\"style\");\r\n\r\n        if (localStorageWeather.length > 0) {\r\n          bgImageContainer.className = `${currentClass} ${localStorageWeather[0].nameClass}`;\r\n          infoMessage.className = `${classMessage} ${localStorageWeather[0].nameClass}`;\r\n          weathersArray = [...localStorageWeather, detailsLocation];\r\n          localStorage.setItem(\"weather\", JSON.stringify(weathersArray));\r\n        } else {\r\n          bgImageContainer.className = nameClass;\r\n          infoMessage.className = alertClass;\r\n          bgImageContainer.style.color = `blur(${2}px)`;\r\n          bgImageContainer.style.webkitFilter = `blur(${2}px)`;\r\n          setClassSearchBar(iconId, isDayOrNight);\r\n          localStorage.setItem(\"weather\", JSON.stringify(weathersArray));\r\n        }\r\n\r\n        const {\r\n          dotsWrapper,\r\n          sliderBoxes3Mobile,\r\n          sliderBoxes4,\r\n          sliderBoxesDays4,\r\n          detailsTitle,\r\n          detailsWeather,\r\n          innerBoxFour,\r\n          buttonsButtom,\r\n        } = getElementsApp(result);\r\n\r\n        dotsWrapper.innerHTML = \"\";\r\n        createDots(weathersArray);\r\n\r\n        const localIndex = localStorageWeather.length;\r\n\r\n        setClassActiveStyles(iconId, isDayOrNight, result, localIndex);\r\n\r\n        let clearOne = setInterval(() => {\r\n          const lcStorage = JSON.parse(localStorage.getItem(\"weather\") || []);\r\n\r\n          if (lcStorage.length === 0) {\r\n            clearInterval(clearOne);\r\n          }\r\n          clock(result, timezone);\r\n        }, 1000);\r\n\r\n        const sliderBox2Boxes = document.querySelector(\".slider__box-2-boxes\");\r\n        sliderBox2Boxes.className = `slider__box-2-boxes-${result.city}`;\r\n        sliderBox2Boxes.style.position = \"relative\";\r\n        sliderBox2Boxes.style.margin = \"auto\";\r\n        sliderBox2Boxes.style.height = `calc(${80}% - ${9}px)`;\r\n        sliderBox2Boxes.style.width = 99 + \"%\";\r\n\r\n        const elementCanvas = document.createElement(\"canvas\");\r\n        elementCanvas.className = `myChart-${result.city.replace(/\\s/g, \"-\")}`;\r\n        sliderBox2Boxes.appendChild(elementCanvas);\r\n\r\n        const config = getChartData(result, timezone);\r\n\r\n        new Chart(\r\n          document.querySelector(`.myChart-${result.city.replace(/\\s/g, \"-\")}`),\r\n          config\r\n        );\r\n\r\n        defaultVisiblityDetailsButton(buttonsButtom, sliderBoxes4);\r\n\r\n        buttonsButtom.forEach((item, index) => {\r\n          item.addEventListener(\"click\", (e) =>\r\n            handleClickButtonCheckWeather(\r\n              e,\r\n              index,\r\n              detailsWeather,\r\n              buttonsButtom,\r\n              innerBoxFour,\r\n              sliderBoxes3Mobile,\r\n              sliderBoxesDays4,\r\n              sliderBoxes4\r\n            )\r\n          );\r\n\r\n          item.addEventListener(\"touchstart\", (e) =>\r\n            handleClickButtonCheckWeather(\r\n              e,\r\n              index,\r\n              detailsWeather,\r\n              buttonsButtom,\r\n              innerBoxFour,\r\n              sliderBoxes3Mobile,\r\n              sliderBoxesDays4,\r\n              sliderBoxes4\r\n            )\r\n          );\r\n        });\r\n\r\n        window.addEventListener(\"resize\", () =>\r\n          CheckSizeWindow(\r\n            buttonsButtom,\r\n            sliderBoxes3Mobile,\r\n            sliderBoxesDays4,\r\n            sliderBoxes4,\r\n            innerBoxFour,\r\n            detailsTitle\r\n          )\r\n        );\r\n\r\n        createCopySlides(result, config);\r\n\r\n        counter = 1;\r\n        e.target[0].value = \"\";\r\n        e.target[1].value = \"\";\r\n      })\r\n      .catch((err) => {\r\n        msgAlert.innerHTML = err.message;\r\n        setTimeout(() => (msgAlert.innerHTML = \"\"), 2000);\r\n      });\r\n  };\r\n\r\n  form.addEventListener(\"submit\", handleSearchWeather);\r\n\r\n  const setClassAfterRemove = (lcnameClass) => {\r\n    const firstClassBg = bgImageContainer.className.split(\" \")[0];\r\n    const firstClassBtnR = buttonRemove.className.split(\" \")[0];\r\n    const firstClassBtnS = buttonSearch.className.split(\" \")[0];\r\n    const messageClass = infoMessage.className.split(\" \")[0];\r\n    const oneClassCity = searchInputCity.className.split(\" \")[0];\r\n    const twoClassCity = searchInputCity.className.split(\" \")[1];\r\n    const oneClassCountry = searchInputCountry.className.split(\" \")[0];\r\n    const twoClassCountry = searchInputCountry.className.split(\" \")[1];\r\n\r\n    infoMessage.className = `${messageClass} ${lcnameClass}`;\r\n\r\n    bgImageContainer.className = `${firstClassBg} ${lcnameClass}`;\r\n    buttonRemove.className = `${firstClassBtnR} ${lcnameClass}`;\r\n    buttonSearch.className = `${firstClassBtnS} ${lcnameClass}`;\r\n    searchInputCity.className = `${oneClassCity} ${twoClassCity} ${lcnameClass}`;\r\n    searchInputCountry.className = `${oneClassCountry} ${twoClassCountry} ${lcnameClass}`;\r\n  };\r\n\r\n  const removeElementsArray = (indexNum) => {\r\n    const updateBox4CurrentIcons = box4CurrentIcons.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updateBox4CurrentTemp = box4CurrentTemp.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4CurrentDesc = box4CurrentDescription.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4DaysLabel = box4DaysLable.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4DaysTimes = box4DayTimes.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4NightTimes = box4NightTimes.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4TempDay = box4TempDay.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4TempNight = box4TempNight.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4IconsDay = box4IconsDay.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4IconsNight = box4IconsNight.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4HourTimes = box4HourTimes.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4HourTemps = box4HourTemps.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4HourIcons = box4HourIcons.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4HourDesc = box4HourDescription.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox4HourCelsius = box4HourCelsious.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox3HourTime = box3HourTime.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox3HourTemp = box3HourTemp.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox3HourIcon = box3HourIcon.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox3HourDesc = box3HourDescription.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedBox3HourCelsius = box3HourCelsius.filter(\r\n      (item, index) => index !== indexNum\r\n    );\r\n\r\n    const updatedButtons = buttons.filter((item, index) => index !== indexNum);\r\n\r\n    box4CurrentIcons = updateBox4CurrentIcons;\r\n    box4CurrentTemp = updateBox4CurrentTemp;\r\n    box4CurrentDescription = updatedBox4CurrentDesc;\r\n    box4DaysLable = updatedBox4DaysLabel;\r\n    box4DayTimes = updatedBox4DaysTimes;\r\n    box4NightTimes = updatedBox4NightTimes;\r\n    box4TempDay = updatedBox4TempDay;\r\n    box4TempNight = updatedBox4TempNight;\r\n    box4IconsDay = updatedBox4IconsDay;\r\n    box4IconsNight = updatedBox4IconsNight;\r\n    box4HourTimes = updatedBox4HourTimes;\r\n    box4HourTemps = updatedBox4HourTemps;\r\n    box4HourIcons = updatedBox4HourIcons;\r\n    box4HourDescription = updatedBox4HourDesc;\r\n    box4HourCelsious = updatedBox4HourCelsius;\r\n    box3HourTime = updatedBox3HourTime;\r\n    box3HourTemp = updatedBox3HourTemp;\r\n    box3HourIcon = updatedBox3HourIcon;\r\n    box3HourDescription = updatedBox3HourDesc;\r\n    box3HourCelsius = updatedBox3HourCelsius;\r\n    buttons = updatedButtons;\r\n  };\r\n\r\n  const handleRemoveWeatherSlide = (e) => {\r\n    const localStorageData = JSON.parse(\r\n      localStorage.getItem(\"weather\") || \"[]\"\r\n    );\r\n\r\n    if (\r\n      e.path[3].childNodes[7].firstElementChild.attributes[1] &&\r\n      localStorageData.length > 0\r\n    ) {\r\n      buttonRemove.disabled = true;\r\n      const elementStyle =\r\n        e.path[3].childNodes[7].firstElementChild.attributes[1].nodeValue;\r\n      const partElementStyle = elementStyle.slice(\r\n        elementStyle.lastIndexOf(\"(\")\r\n      );\r\n      let indexSlide;\r\n      if (partElementStyle.indexOf(\"-\") !== -1) {\r\n        indexSlide = partElementStyle.slice(2, 3);\r\n      } else {\r\n        indexSlide = partElementStyle.slice(1, 2);\r\n      }\r\n\r\n      indexSlide = parseInt(indexSlide);\r\n\r\n      const nameDeletedCity = localStorageData[indexSlide - 1].city;\r\n      msgAlert.innerHTML = `${nameDeletedCity} removed successfully`;\r\n      setTimeout(() => {\r\n        msgAlert.innerHTML = \"\";\r\n        buttonRemove.disabled = false;\r\n      }, 2000);\r\n\r\n      const updatedWeatherSlides = localStorageData.filter(\r\n        (item, index) => index !== indexSlide - 1\r\n      );\r\n\r\n      localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherSlides));\r\n\r\n      const slidesWeather = document.querySelectorAll(\".slider__image-wrapper\");\r\n\r\n      slidesWeather.forEach((item, index) => {\r\n        if (index === indexSlide) {\r\n          item.parentNode.removeChild(item);\r\n        }\r\n      });\r\n\r\n      if (sliderContent.children.length > 1) {\r\n        sliderContent.style.transitionDuration = \"0s\";\r\n        sliderContent.children[0].remove();\r\n        sliderContent.children[sliderContent.children.length - 1].remove();\r\n      }\r\n\r\n      weathersArray = weathersArray.filter(\r\n        (item, index) => index !== indexSlide - 1\r\n      );\r\n\r\n      sliderContent.style.transitionDuration = \"0s\";\r\n\r\n      sliderContent.style.transform = \"translateX(\" + -widthDiv + \"%)\";\r\n\r\n      const localStoragSlidesData = JSON.parse(\r\n        localStorage.getItem(\"weather\") || \"[]\"\r\n      );\r\n\r\n      const result = localStoragSlidesData[localStoragSlidesData.length - 1];\r\n\r\n      if (localStoragSlidesData.length > 0) {\r\n        setClassAfterRemove(localStoragSlidesData[0].nameClass);\r\n      } else {\r\n        setDefaultLogoPage();\r\n      }\r\n\r\n      if (result) {\r\n        const config = getChartData(result, result.timezone);\r\n        createCopySlides(result, config);\r\n      }\r\n\r\n      counter = 1;\r\n      dotsWrapper.innerHTML = \"\";\r\n      createDots(localStoragSlidesData);\r\n\r\n      const sliderDots = document.querySelectorAll(\".slider__dot\");\r\n\r\n      if (sliderDots.length > 0) {\r\n        sliderDots.forEach((item) => {\r\n          const classDot = item.className.split(\" \")[0];\r\n          item.className = `${classDot} ${localStoragSlidesData[0].nameClass}`;\r\n        });\r\n      }\r\n\r\n      removeElementsArray(indexSlide - 1);\r\n\r\n      if (localStoragSlidesData.length === 0) {\r\n        logoStart.style.display = \"flex\";\r\n      }\r\n    }\r\n  };\r\n\r\n  buttonRemove.addEventListener(\"click\", handleRemoveWeatherSlide);\r\n\r\n  const CheckSizeWindow = (\r\n    buttonsButtom,\r\n    sliderBoxes3Mobile,\r\n    sliderBoxesDays4,\r\n    sliderBoxes4,\r\n    innerBoxFour,\r\n    detailsTitle\r\n  ) => {\r\n    appWrapper.style.width = 1000 + \"px\";\r\n    appWrapper.style.height = 600 + \"px\";\r\n\r\n    let sizePrecent = (1000 * 100) / window.innerWidth;\r\n\r\n    appWrapper.style.width = sizePrecent + \"%\";\r\n\r\n    if (window.innerWidth < 1000 && window.innerWidth > 767) {\r\n      sizeSliderDefaultAndResizeLess1000();\r\n    } else if (window.innerWidth <= 767) {\r\n      appWrapper.removeAttribute(\"style\");\r\n    }\r\n\r\n    if (window.innerWidth >= 768 && innerBoxFour !== null) {\r\n      buttonsButtom.forEach((item) => {\r\n        item.classList.remove(\"active-btn-bottom\");\r\n      });\r\n\r\n      sliderBoxes3Mobile.forEach((item, index) => {\r\n        item.classList.remove(\"details-visible\");\r\n      });\r\n\r\n      sliderBoxesDays4.forEach((item, index) => {\r\n        item.classList.remove(\"details-visible\");\r\n      });\r\n\r\n      sliderBoxes4.forEach((item, index) => {\r\n        item.classList.add(\"details-visible\");\r\n      });\r\n\r\n      innerBoxFour.style.transform = `translateX(0%)`;\r\n      detailsTitle.textContent = \"Details\";\r\n    } else {\r\n      const firstButtonCheckWeatherDetails = buttonsButtom[0];\r\n      firstButtonCheckWeatherDetails?.classList.add(\"active-btn-bottom\");\r\n    }\r\n  };\r\n\r\n  const startTouchDisplay = (e) => {\r\n    const touchX = e.touches[0].clientX;\r\n    const touchY = e.touches[0].clientY;\r\n\r\n    initialX = touchX;\r\n    initialY = touchY;\r\n  };\r\n\r\n  const moveTouchDisplay = (e) => {\r\n    if (!initialX || !initialY) {\r\n      return;\r\n    }\r\n\r\n    const currenTouchX = e.touches[0].clientX;\r\n    const currenTouchY = e.touches[0].clientY;\r\n\r\n    const diffrenceX = initialX - currenTouchX;\r\n    const diffrenceY = initialY - currenTouchY;\r\n\r\n    if (Math.abs(diffrenceX) > Math.abs(diffrenceY)) {\r\n      if (diffrenceX > 0) {\r\n        sliderContent.dispatchEvent(events.swipeLeft);\r\n      } else {\r\n        sliderContent.dispatchEvent(events.swipeRight);\r\n      }\r\n    } else {\r\n      if (diffrenceY > 0) {\r\n        sliderContent.dispatchEvent(events.swipeUp);\r\n      } else {\r\n        sliderContent.dispatchEvent(events.swipeDown);\r\n      }\r\n    }\r\n\r\n    initialX = null;\r\n    initialY = null;\r\n  };\r\n\r\n  sliderContent.addEventListener(\"touchstart\", startTouchDisplay);\r\n  sliderContent.addEventListener(\"touchmove\", moveTouchDisplay);\r\n\r\n  const setClassSingleSlide = (lcClassName) => {\r\n    const firstClassBgc = bgImageContainer.className.split(\" \")[0];\r\n    const firstClassBtnR = buttonRemove.className.split(\" \")[0];\r\n    const firstClassBtnS = buttonSearch.className.split(\" \")[0];\r\n    const messageClass = infoMessage.className.split(\" \")[0];\r\n    const oneClassCity = searchInputCity.className.split(\" \")[0];\r\n    const twoClassCity = searchInputCity.className.split(\" \")[1];\r\n    const oneClassCountry = searchInputCountry.className.split(\" \")[0];\r\n    const twoClassCountry = searchInputCountry.className.split(\" \")[1];\r\n    bgImageContainer.className = `${firstClassBgc} ${lcClassName}`;\r\n    buttonRemove.className = `${firstClassBtnR} ${lcClassName}`;\r\n    buttonSearch.className = `${firstClassBtnS} ${lcClassName}`;\r\n    infoMessage.className = `${messageClass} ${lcClassName}`;\r\n    searchInputCity.className = `${oneClassCity} ${twoClassCity} ${lcClassName}`;\r\n    searchInputCountry.className = `${oneClassCountry} ${twoClassCountry} ${lcClassName}`;\r\n    const sliderDots = document.querySelectorAll(\".slider__dot\");\r\n\r\n    sliderDots.forEach((item) => {\r\n      const classDot = item.className.split(\" \")[0];\r\n      item.className = `${classDot} ${lcClassName}`;\r\n    });\r\n  };\r\n\r\n  const update = () => {\r\n    sliderContent.style.transform = \"translateX(\" + -widthDiv * counter + \"%)\";\r\n  };\r\n\r\n  const slideTransition = () => {\r\n    sliderContent.style.transition = \"transform 0.6s ease-in-out\";\r\n    update();\r\n  };\r\n\r\n  const moveLeft = (e) => {\r\n    const localStoragSlidesData = JSON.parse(\r\n      localStorage.getItem(\"weather\") || \"[]\"\r\n    );\r\n\r\n    if (counter > localStoragSlidesData.length - 1) {\r\n      setClassSingleSlide(localStoragSlidesData[0].nameClass);\r\n    } else {\r\n      setClassSingleSlide(localStoragSlidesData[counter].nameClass);\r\n    }\r\n\r\n    if (counter >= sliderContent.children.length - 1) return;\r\n\r\n    counter++;\r\n\r\n    slideTransition();\r\n  };\r\n\r\n  const moveRight = (e) => {\r\n    const localStoragSlidesData = JSON.parse(\r\n      localStorage.getItem(\"weather\") || \"[]\"\r\n    );\r\n\r\n    if (counter <= 0) return;\r\n    counter--;\r\n\r\n    if (counter === 0) {\r\n      setClassSingleSlide(\r\n        localStoragSlidesData[localStoragSlidesData.length - 1].nameClass\r\n      );\r\n    } else {\r\n      setClassSingleSlide(localStoragSlidesData[counter - 1].nameClass);\r\n    }\r\n\r\n    slideTransition();\r\n  };\r\n\r\n  sliderContent.addEventListener(\"swipeLeft\", moveLeft);\r\n  sliderContent.addEventListener(\"swipeRight\", moveRight);\r\n\r\n  sliderContent.addEventListener(\"transitionend\", () => {\r\n    if (\r\n      Boolean(sliderContent.children[counter]) &&\r\n      sliderContent.children[counter].id === \"last\"\r\n    ) {\r\n      sliderContent.style.transitionDuration = \"0s\";\r\n      counter = sliderContent.children.length - 2;\r\n      sliderContent.style.transform =\r\n        \"translateX(\" + -widthDiv * counter + \"%)\";\r\n    } else if (\r\n      Boolean(sliderContent.children[counter]) &&\r\n      sliderContent.children[counter].id === \"first\"\r\n    ) {\r\n      sliderContent.style.transitionDuration = \"0s\";\r\n      counter = 1;\r\n      sliderContent.style.transform =\r\n        \"translateX(\" + -widthDiv * counter + \"%)\";\r\n    }\r\n  });\r\n\r\n  const handleClickDot = (index) => {\r\n    const lStorageSlide = JSON.parse(localStorage.getItem(\"weather\") || \"[]\");\r\n    sliderContent.style.transitionDuration = \"0.6s\";\r\n    sliderContent.style.transform = `translateX(-${index + 1}00%)`;\r\n    counter = index + 1;\r\n    setClassSingleSlide(lStorageSlide[index].nameClass);\r\n  };\r\n};\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", handleContentLoaded);\r\n"]}